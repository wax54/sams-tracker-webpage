{"version":3,"sources":["NavBar.js","api.js","redux/actionCreators.js","InputAlert.js","AddShift.js","ShiftCollection.js","CurrShift.js","CurrShiftList.js","Header.js","Dashboard.js","Forms/SimpleForm.js","Forms/Login.js","Forms/Signup.js","App.js","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js"],"names":["NavBar","className","type","id","href","UserApi","username","password","axios","post","resp","this","token","data","status","user","errors","getMessagesFromErrorRes","shifts","page","push","length","shift","time","patch","stop","e","response","console","error","message","Array","isArray","endShift","clockOutAt","Date","shiftId","dispatch","a","clockOutShift","payload","authorizeUser","login","registerUser","register","InputAlert","msg","persistence","alertId","Math","random","setTimeout","document","getElementById","remove","AddShift","currShifts","useSelector","key","INIT","category","useState","formData","setFormData","inputAlerts","setInputAlerts","useDispatch","handleChange","evt","target","name","value","addAlert","alerts","undefined","onSubmit","preventDefault","toLowerCase","some","newShift","start","addShift","startShift","htmlFor","onChange","placeholder","both","Shift","u_id","getTime","duration","specificity","durationFormatted","timeFormat","test","strict","splitDateTime","clockOut","ShiftCollection","add","newShifts","reduce","totalHours","getHours","removedShift","shiftIndex","findIndex","splice","someShift","find","initialCategory","newCategory","forEach","initialtype","newType","equals","categories","Set","types","dateTime","filter","queryString","field","query","matched","ms","MSINHOUR","MSINDAY","MSINMONTH","MSINYEAR","result","i","y","floor","mth","d","h","min","s","CurrShift","getFormattedDuration","setDuration","clockoutDuration","dataset","reference","mins","minsFrom","useEffect","intervalId","setInterval","clearInterval","onClick","CurrShiftList","map","Header","Dashboard","allShifts","shallowEqual","shiftsByCategory","makeSeries","useCallback","Object","keys","getTotalHours","series","setSeries","log","intervalIdArray","width","height","method","colors","combined","innerRadius","padAngle","cornerRadius","innerPadding","pieAttributes","onMouseMove","style","opacity","onMouseLeave","onMouseUp","pieSlice","parentElement","classList","replace","pieStyle","SimpleForm","INITIAL_STATE","submitText","resetForm","LoginForm","setErrors","reset","alert","SignupForm","signup","App","getShifts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHIFTS_INITIAL_STATE","QUEUE_INITIAL_STATE","USER_INITIAL_STATE","combineReducers","action","updatedShift","shiftQueue","localStorage","clear","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","root","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistedStore","persistStore","index","StrictMode","loading","persistor","ReactDOM","render"],"mappings":"iTAsBeA,EApBA,WACX,OACI,sBAAKC,UAAU,iDAAf,UACI,uBAAMA,UAAU,oBAAhB,yBAAgD,mBAAGA,UAAU,+BAE7D,wBAAQA,UAAU,iBAAiBC,KAAK,SAAS,iBAAe,WAAW,iBAAe,YAA1F,SACI,sBAAMD,UAAU,0BAEpB,qBAAKA,UAAU,+EAA+EE,GAAG,WAAjG,SAEI,mBAAGC,KAAK,aAAaH,UAAU,2BAA/B,6B,+FCXVI,E,iIAGF,kGAAoBC,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,SAA9B,kBAE2BC,IAAMC,KAAK,mBAAoB,CAAEH,WAAUC,aAFtE,cAEcG,EAFd,OAGQC,KAAKC,MAAQF,EAAKG,KAAKD,MAH/B,kBAIe,CAAEE,QAAQ,EAAMC,KAAML,EAAKG,KAAKE,OAJ/C,uCAMcC,EAASC,EAAwB,EAAD,IAN9C,kBAOe,CAAEH,QAAQ,EAAOE,WAPhC,yD,oHAUA,kGAAuBV,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,SAAjC,kBAE2BC,IAAMC,KAAK,qBAAsB,CAAEH,WAAUC,aAFxE,cAEcG,EAFd,OAGQC,KAAKC,MAAQF,EAAKG,KAAKD,MAH/B,kBAIe,CAAEE,QAAQ,EAAMC,KAAML,EAAKG,KAAKE,OAJ/C,uCAMcC,EAASC,EAAwB,EAAD,IAN9C,kBAOe,CAAEH,QAAQ,EAAOE,WAPhC,yD,qHAUA,6FACQL,KAAKC,MADb,yCAC2B,CAAEE,QAAQ,EAAOE,OAAQ,CAAC,wBADrD,gBAGcE,EAAS,GAEXC,EAAO,EALnB,uBAOyBX,IAAMC,KAAK,oBAAqB,CAAEG,MAAOD,KAAKC,MAAOO,SAP9E,OAOYT,EAPZ,OAQYQ,EAAOE,KAAP,MAAAF,EAAM,YAASR,EAAKG,KAAKK,SACzBC,IATZ,WAUiBT,EAAKG,KAAKK,OAAOG,OAVlC,iDAYe,CAAEP,QAAQ,EAAMI,WAZ/B,yCAccF,EAASC,EAAwB,EAAD,IAd9C,kBAee,CAAEH,QAAQ,EAAOE,WAfhC,0D,mHAkBA,WAAsBM,GAAtB,kGAE2Bd,IAAMC,KAAK,eAAgB,CAACa,QAAOV,MAAOD,KAAKC,QAF1E,cAEcF,EAFd,yBAGe,CAAEI,QAAQ,EAAMQ,MAAOZ,EAAKG,KAAKS,QAHhD,uCAKcN,EAASC,EAAwB,EAAD,IAL9C,kBAMe,CAAEH,QAAQ,EAAOE,WANhC,yD,yHASA,WAA2Bb,EAAIoB,GAA/B,kGAE2Bf,IAAMgB,MAAN,sBAA2BrB,GAAM,CAAEmB,MAAM,CAACG,KAAMF,GAAOX,MAAOD,KAAKC,QAF9F,cAEcF,EAFd,yBAGe,CAAEI,QAAQ,EAAMQ,MAAOZ,EAAKG,KAAKS,QAHhD,uCAKcN,EAASC,EAAwB,EAAD,IAL9C,kBAMe,CAAEH,QAAQ,EAAOE,WANhC,yD,gEAWJ,SAASC,EAAwBS,GAC7B,GAAIA,EAAEC,SAAU,CACZC,QAAQC,MAAM,aAAcH,EAAEC,UAC9B,IAAIG,EAAUJ,EAAEC,SAASd,KAAKgB,MAAMC,QACpC,OAAOC,MAAMC,QAAQF,GAAWA,EAAU,CAACA,GACxC,MAAO,CAAC,uBAlEbzB,EACKO,MAAQ,GAoEJP,QCjCR,SAAS4B,EAAS9B,GAErB,OAAO+B,EAAW/B,EADL,IAAIgC,MAId,SAASD,EAAWE,EAASX,GAChC,8CAAO,WAAeY,GAAf,eAAAC,EAAA,sEACgBjC,EAAQkC,cAAcH,EAASX,GAD/C,WAEiB,KADdf,EADH,QAEMI,OAFN,uBAGCuB,EAAS,CAAEnC,KAAM,eAAgBsC,QAAS9B,EAAKY,QAHhD,mBAIQ,GAJR,WAMiB,IAAhBZ,EAAKI,OANN,uBASCc,QAAQC,MAAMnB,EAAKM,QATpB,mBAUQ,GAVR,2CAAP,sDAmBG,SAASyB,EAAT,GAAgD,IAAvBnC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACtC,8CAAO,WAAgB8B,GAAhB,eAAAC,EAAA,sEACgBjC,EAAQqC,MAAM,CAACpC,WAAUC,aADzC,cAEgB,KADbG,EADH,QAEKI,QACJuB,EAAS,CAAEnC,KAAM,WAAYsC,QAAS9B,EAAKK,OAH5C,kBAIIL,GAJJ,2CAAP,sDAQG,SAASiC,EAAT,GAA+C,IAAvBrC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACrC,8CAAO,WAAgB8B,GAAhB,eAAAC,EAAA,sEACgBjC,EAAQuC,SAAS,CAAEtC,WAAUC,aAD7C,cAEiB,KADdG,EADH,QAEMI,QACLuB,EAAS,CAAEnC,KAAM,WAAYsC,QAAS9B,EAAKK,OAH5C,kBAIIL,GAJJ,2CAAP,sDCvEJ,IAeemC,EAfI,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IAA2B,IAAtBC,mBAAsB,MAAR,EAAQ,EAEvCC,EAAUC,KAAKC,SAAW,SAQhC,OANIH,EAAc,GACdI,YAAW,WACPC,SAASC,eAAeL,GAASM,YACjCP,GAIR,qBAAK9C,UAAU,mBAAmBE,GAAI6C,EAAtC,SACMF,KCuFKS,EA/FE,WACb,IAAIC,EAAaC,aAAY,YAAiB,IAAdvC,EAAa,EAAbA,OACtBsC,EAAa,GACnB,IAAK,IAAIE,KAAOxC,EACPA,EAAOwC,GAAKjC,MAAM+B,EAAWpC,KAAKF,EAAOwC,IAElD,OAAOF,KAGLG,EAAO,CAACzD,KAAM,GAAI0D,SAAU,IAClC,EAAkCC,mBAASF,GAA3C,mBAAQG,EAAR,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAQG,EAAR,KAAqBC,EAArB,KACM5B,EAAW6B,cAEjB,SAASC,EAAaC,GAClB,MAAwBA,EAAIC,OAApBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdR,GAAY,SAAAlD,GAAI,kCAASA,GAAT,kBAAgByD,EAAOC,OAE3C,SAASC,EAASF,EAAMxB,GACpBmB,GAAe,SAAAQ,GAAM,kCACdA,GADc,kBAEhBH,EAAOxB,OAGZK,YAAW,WACPc,GAAe,SAAAQ,GAAM,kCACdA,GADc,kBAEhBH,OAAOI,SAEb,KAqBP,OACI,sBAAMvE,GAAG,YAAYF,UAAU,wCAAwC0E,SAnB3E,SAAsBP,GAClBA,EAAIQ,iBACJ,IAAM1E,EAAO4D,EAAS5D,KAAK2E,cACrBjB,EAAWE,EAASF,SAASiB,cAEnC,GAAG3E,GAAS0D,EAAU,CAClB,GAAIJ,EAAWsB,MAAK,SAAAxD,GAAK,OAAIA,EAAMpB,OAAOA,GAAQoB,EAAMsC,WAAaA,KAEjE,YADAY,EAAS,OAAD,gCAAkCtE,EAAlC,gBAA8C0D,IAG1DG,EAAYJ,GACZtB,EF7CL,SAAoBnC,EAAM0D,GAC7B,8CAAO,WAAgBvB,GAAhB,iBAAAC,EAAA,6DACGyC,EAAW,CAACC,MAAO,IAAI7C,KAAQjC,OAAM0D,YADxC,SAEgBvD,EAAQ4E,SAASF,GAFjC,WAGiB,KADdrE,EAFH,QAGMI,OAHN,uBAICuB,EAAS,CAAEnC,KAAM,cAAesC,QAAS9B,EAAKY,QAJ/C,mBAKQ,GALR,WAOiB,IAAhBZ,EAAKI,OAPN,wBAQCc,QAAQC,MAAMnB,EAAKM,QARpB,mBASQ,GATR,4CAAP,sDE4CiBkE,CAAWhF,EAAM0D,SAEtB1D,GAAMsE,EAAS,OAAQ,wBACvBZ,GAAUY,EAAS,WAAY,yBAKvC,SACI,sBAAKvE,UAAU,gDAAf,UACI,oBAAIA,UAAU,2CAAd,wBAEA,sBAAKA,UAAU,oCAAf,UACI,uBAAOkF,QAAQ,OAAOlF,UAAU,aAAhC,uBACA,qBAAKA,UAAU,cAAf,SACI,uBAAOC,KAAK,OACRD,UAAU,eACVE,GAAG,OACHmE,KAAK,OACLC,MAAOT,EAAS5D,KAChBkF,SAAUjB,EACVkB,YAAY,aAGnBrB,EAAY9D,KAAO,cAAC,EAAD,CAAY4C,IAAKkB,EAAY9D,OAAW,QAEhE,sBAAKD,UAAU,8BAAf,UACI,uBAAOkF,QAAQ,WAAWlF,UAAU,aAApC,sBACA,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAMA,UAAU,mBAAhB,oBAEJ,uBAAOC,KAAK,OACRD,UAAU,eACVE,GAAG,WACHmE,KAAK,WACLC,MAAOT,EAASF,SAChBwB,SAAUjB,EACVkB,YAAY,WAEnBrB,EAAYJ,SAAW,cAAC,EAAD,CAAYd,IAAKkB,EAAYJ,WAAe,QAGxE,sBAAKzD,GAAG,kBAAkBF,UAAU,eAApC,UACK+D,EAAYsB,KAAO,cAAC,EAAD,CAAYxC,IAAKkB,EAAYsB,OAAW,KAE5D,wBAAQpF,KAAK,SAASD,UAAU,wCAAhC,+B,eC1FdsF,E,WAQF,cAAwD,IAA1CP,EAAyC,EAAzCA,MAAO9E,EAAkC,EAAlCA,KAAM0D,EAA4B,EAA5BA,SAAUnC,EAAkB,EAAlBA,KAAMtB,EAAY,EAAZA,GAAIqF,EAAQ,EAARA,KAAQ,oBACnD7E,KAAKR,GAAKA,EACVQ,KAAA,KAAe6E,EACXR,aAAiB7C,KAAMxB,KAAKqE,MAAQA,EACnCrE,KAAKqE,MAAQ,IAAI7C,KAAK6C,GAE3BrE,KAAKT,KAAOA,EACZS,KAAKiD,SAAWA,EACZnC,IACIA,aAAgBU,KAAMxB,KAAKc,KAAOA,EACjCd,KAAKc,KAAO,IAAIU,KAAKV,I,4CAOlC,WACI,OAAId,KAAKc,KAAad,KAAKc,KAAKgE,UAAY9E,KAAKqE,MAAMS,WAC3C,IAAItD,MAAOsD,UAAY9E,KAAKqE,MAAMS,Y,sBAMlD,WACI,OAAO9E,KAAK+E,WAAa,O,kCAG7B,WAAuC,IAAlBC,EAAiB,uDAAH,EACzBD,EAAW/E,KAAK+E,WAChBE,EAAoBC,EAAWH,EAAUC,GAC/C,OAAOC,I,oBAGX,SAAOE,GAAoB,IAAdC,IAAa,yDACtB,GAAmB,kBAATD,EAAmB,OAAO,EAC/B,GAAInF,KAAKR,IAAM2F,EAAK3F,IAAM4F,EAC3B,OAAGpF,KAAKR,KAAO2F,EAAK3F,GAGpB,GAAIQ,KAAKiD,WAAakC,EAAKlC,UACnBjD,KAAKT,OAAS4F,EAAK5F,KAAM,CACzB,GAAIS,KAAKqE,MAAMS,YAAcK,EAAKd,MAAMS,UAAW,OAAO,EAC1D,IAAKM,EAAQ,OAAO,EAG5B,OAAO,I,sBAUf,WAA6B,IAApBtE,EAAmB,uDAAZ,IAAIU,KAChBxB,KAAKc,KAAOA,I,wBAYhB,SAAWuE,EAAe9F,GAAiC,IAA3B0D,EAA0B,uDAAfjD,KAAKiD,SACtCmB,EAAW,IAAIQ,EAAM,CAACP,MAAOgB,EAAe9F,OAAM0D,WAAUnC,KAAMd,KAAKc,OAE7E,OADAd,KAAKsF,SAASD,GACPjB,M,KAMTmB,E,WACF,aAA2B,oBACvBvF,KAAKO,OAAS,GACdP,KAAKwF,IAAL,MAAAxF,KAAA,W,4CAGJ,WACI,MAAO,+BAAiCA,KAAKU,SAAW,IAAMV,KAAKO,S,iBAevE,WAAmB,IAAD,uBAAXkF,EAAW,yBAAXA,EAAW,gBACd,cAAkBA,EAAlB,eAA6B,CAAxB,IAAI9E,EAAK,KACJA,aAAiBiE,IACnBjE,EAAQ,IAAIiE,EAAMjE,IAEtBX,KAAKO,OAAOE,KAAKE,M,2BAGzB,WACI,OAAOX,KAAKO,OAAOmF,QAAO,SAACC,EAAYhF,GACnC,OAAOgF,EAAahF,EAAMiF,aAC3B,K,oBAGP,SAAOC,GACH,IAAMC,EAAa9F,KAAKO,OAAOwF,WAAU,SAACpF,GACtC,OAAIA,EAAMsC,WAAa4C,EAAa5C,UAC5BtC,EAAMpB,OAASsG,EAAatG,MACxBoB,EAAM0D,QAAUwB,EAAaxB,SAI7C,OAAoB,IAAhByB,IACA9F,KAAKO,OAAOyF,OAAOF,EAAY,IACxB,K,sBAKf,SAASG,GAA4B,IAAjBb,EAAgB,wDAChC,QAAIpF,KAAKkG,KAAKD,EAAWb,K,4BAS7B,SAAee,EAAiBC,GAC5B,IAAM7F,EAASP,KAAKiD,SAASkD,GAAiB5F,OAE9C,QAAIA,EAAOG,SACPH,EAAO8F,SAAQ,SAAA1F,GAAWA,EAAMsC,SAAWmD,MACpC,K,wBAKf,SAAWE,EAAaC,GACpB,IAAMhG,EAASP,KAAKT,KAAK+G,GAAa/F,OAEtC,QAAIA,EAAOG,SACPH,EAAO8F,SAAQ,SAAA1F,GAAWA,EAAMpB,KAAOgH,MAChC,K,kBAMf,SAAKN,GAA4B,IAAD,EAAhBb,EAAgB,sEACVpF,KAAKO,QADK,IAC5B,2BAA+B,CAAC,IAAvBI,EAAsB,QAC3B,GAAGA,EAAM6F,OAAOP,EAAWb,GAAS,OAAOzE,GAFnB,8BAI5B,OAAO,I,2BAGX,WACI,IADY,EACN8F,EAAa,IAAIC,IADX,cAEM1G,KAAKO,QAFX,IAEZ,2BAA+B,CAAC,IAAvBI,EAAsB,QAC3B8F,EAAWjB,IAAI7E,EAAMsC,WAHb,8BAKZ,OAAO,YAAIwD,K,sBAGf,WACI,IADO,EACDE,EAAQ,IAAID,IADX,cAEW1G,KAAKO,QAFhB,IAEP,2BAA+B,CAAC,IAAvBI,EAAsB,QAC3BgG,EAAMnB,IAAI7E,EAAMpB,OAHb,8BAKP,OAAO,YAAIoH,K,4BAGf,SAAeC,GACX,OAAO,YAAIrB,EAAX,YAA8BvF,KAAKO,OAC9BsG,QAAO,gBAAGxC,EAAH,EAAGA,MAAH,OAAeuC,EAAS9B,UAAYT,EAAMS,iB,6BAE1D,SAAgB8B,GACZ,OAAO,YAAIrB,EAAX,YAA8BvF,KAAKO,OAC9BsG,QAAO,gBAAGxC,EAAH,EAAGA,MAAH,OAAeuC,EAAS9B,UAAYT,EAAMS,iB,2BAG1D,WACI,OAAO,YAAIS,EAAX,YAA+BvF,KAAKO,OAAOsG,QAAO,SAAClG,GAAD,OAAYA,EAAMG,Y,sBAGxE,SAASgG,GACL,OAAO9G,KAAK6G,OAAO,WAAYC,K,kBAGnC,SAAKA,GACD,OAAO9G,KAAK6G,OAAO,OAAQC,K,oBAG/B,SAAOC,EAAOC,GACV,IAAMC,EAAUjH,KAAKO,OAAOsG,QAAO,SAAAlG,GAAK,OAAIA,EAAMoG,IAAUC,KAC5D,OAAO,YAAIzB,EAAX,YAA8B0B,M,oBAGlC,WAAW,OAAOjH,KAAKO,OAAOG,W,KA+BlC,SAASwE,EAAWgC,EAAIlC,GAEpB,IAEMmC,EAAW,KACXC,EAAU,MACVC,EAAY,OACZC,EAAWD,QAIbE,EAAS,GACTC,EAAI,EACJN,EAAK,IACLK,GAAU,KACVL,IAAW,GAGf,IAAMO,EAAInF,KAAKoF,MAAMR,EAAKI,GAC1B,GAAIG,IAEAP,GAAWO,EAAIH,EACfC,GAAUE,EAAI,YAFdD,GAGSxC,GACL,OAAOuC,EAKf,IAAMI,EAAMrF,KAAKoF,MAAMR,EAAKG,GAC5B,GAAIM,IAEAT,GAAWS,EAAMN,EACjBE,GAAUI,EAAM,aAFhBH,GAGSxC,GACL,OAAOuC,EAIf,IAAMK,EAAItF,KAAKoF,MAAMR,EAAKE,GAC1B,GAAIQ,IAEAV,GAAWU,EAAIR,EACfG,GAAUK,EAAI,WAFdJ,GAGSxC,GACL,OAAOuC,EAIf,IAAMM,EAAIvF,KAAKoF,MAAMR,EAAKC,GAC1B,GAAIU,IAEAX,GAAWW,EAAIV,EACfI,GAAUM,EAAI,YAFdL,GAGSxC,GACL,OAAOuC,EAIf,IAAMO,EAAMxF,KAAKoF,MAAMR,EAxDJ,KAyDnB,GAAIY,IAEAZ,GA3De,IA2DJY,EACXP,GAAUO,EAAM,WAFhBN,GAGSxC,GACL,OAAOuC,EAGf,IAAMQ,EAAIzF,KAAKoF,MAAMR,EAlEL,KAmEhB,OAAIa,IAEAb,GArEY,IAqEDa,EACXR,GAAUQ,EAAI,cAFdP,GAIWD,EClUnB,IAmDeS,EAhDG,SAAC,GAAe,IAAbrH,EAAY,EAAZA,MAEXe,EAAW6B,cACjB,EAAgCL,mBAASvC,EAAMsH,wBAA/C,mBAAOlD,EAAP,KAAiBmD,EAAjB,KAQA,SAAS5C,EAAS7B,GACd,IAAM0E,EAAmB1E,EAAIC,OAAO0E,QAAQC,UAE5C,GAjBI,QAiBDF,EACCzG,EAASJ,EAASX,EAAMnB,UACrB,GAlBK,QAkBD2I,EAAkC,CACzC,IAAM7C,ED0NlB,SAAkBgD,GAA8B,IAAxB1B,EAAuB,uDAAZ,IAAIpF,KACnC,OAAO,IAAIA,KAAKoF,EAAS9B,UAAa,IAAYwD,GC3NzBC,EAAU,IAC3B7G,EAASH,EAAWZ,EAAMnB,GAAI8F,SAE9BrE,QAAQC,MAAM,SAAUiH,GACxBzG,EAASJ,EAASX,EAAMnB,KAGhC,OApBAgJ,qBAAU,WACN,IAAMC,EAAaC,aAAY,kBAC3BR,EAAYvH,EAAMsH,0BACnB,KACH,OAAO,kBAAMU,cAAcF,MAC5B,CAAC9H,EAAOuH,IAgBP,qBAAI5I,UAAU,mDAAd,UACI,sBAAKA,UAAU,uBAAf,UACI,uBAAMA,UAAU,OAAhB,UAAyBqB,EAAMpB,KAA/B,OADJ,OAEI,uBAAMD,UAAU,WAAhB,cAA8BqB,EAAMsC,YACpC,qBAAK3D,UAAU,eAAf,SACMyF,OAGV,sBAAKzF,UAAU,0BAAf,UACI,wBAAQA,UAAU,gDAAgD,iBAAe,WAAjF,uBAGA,sBAAKA,UAAU,0BAAf,UACI,wBAAQA,UAAU,MAAM,iBAzChC,MAyCqDsJ,QAAStD,EAAtD,iBAGA,wBAAQhG,UAAU,MAAM,iBA3CxB,MA2CqDsJ,QAAStD,EAA9D,mCCpBLuD,EAxBO,WAClB,IAAIhG,EAAaC,aAAY,YAAiB,IAAdvC,EAAa,EAAbA,OACtBsC,EAAa,GACnB,IAAI,IAAIE,KAAOxC,EACPA,EAAOwC,GAAKjC,MAAM+B,EAAWpC,KAAKF,EAAOwC,IAEjD,OAAOF,KAGX,OADAA,EAAaA,EAAWiG,KAAI,SAAAnI,GAAK,OAAI,IAAIiE,EAAMjE,MAE3C,qBAAKrB,UAAU,uCAAf,SACI,sBAAKA,UAAU,gDAAf,UACI,oBAAIA,UAAU,kDAAd,4BAEA,oBAAIE,GAAG,iBAAiBF,UAAU,4BAAlC,SACKuD,EAAWiG,KAAI,SAAAnI,GAAK,OACjB,cAAC,EAAD,CAAmDA,MAAOA,GAA1D,UAAmBA,EAAMpB,KAAzB,YAAiCoB,EAAMsC,sBCNhD8F,EAZA,WAEX,OACI,qBAAKzJ,UAAU,gEAAf,SACI,sBAAKA,UAAU,2DAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,U,QC8ED0J,EAlFG,WACd,IAAMC,EAAYnG,aAAY,qBAAGvC,SAAqB2I,KAChDC,EAAmB,GACnBtG,EAAa,GACnB,IAAI,IAAIE,KAAOkG,EAAW,CACtB,IAAMtI,EAAQ,IAAIiE,EAAMqE,EAAUlG,IAC9BpC,EAAMG,MAAM+B,EAAWpC,KAAKE,GAC7BwI,EAAiBxI,EAAMsC,UACtBkG,EAAiBxI,EAAMsC,UAAUuC,IAAI7E,GAErCwI,EAAiBxI,EAAMsC,UAAY,IAAIsC,EAAgB5E,GAI/D,IAAMyI,EAAaC,uBAAY,kBAAMC,OAAOC,KAAKJ,GAAkBL,KAAI,SAAA7F,GACnE,MAAO,CACH/C,KAAM,CAACiJ,EAAiBlG,GAAUuG,iBAClC7F,KAAMV,SAGd,EAA4BC,mBAASkG,KAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEAzI,QAAQ0I,IAAIF,GACZjB,qBAAU,WACNkB,EAAUN,OACX,CAACH,EAAWS,IACflB,qBAAU,WACN,IAAMoB,EAAkB/G,EAAWiG,KAAI,SAAAnI,GACnC,OAAO+H,aAAY,WACfgB,GAAU,SAAAD,GACN,OAAOA,EAAOX,KAAI,SAAA5I,GACd,OAAGA,EAAKyD,OAAShD,EAAMsC,UACnB/C,EAAKA,KAAK,IAAM,EAAE,GAAG,GACd,eAAIA,IAEJA,UAIpB,QAEP,OAAO,kBACH0J,EAAgBvD,SAAQ,SAAA7G,GAAE,OAAImJ,cAAcnJ,SACjD,CAACyJ,EAAWS,IAYf,OACA,sBAAKlK,GAAG,wBAAwBF,UAAU,sEAA1C,UACI,oBAAIA,UAAU,kDAAd,sCAGI,cAAC,QAAD,CAAOuK,MAAO,IAAKC,OAAQ,IAAKL,OAAQA,EAAxC,SACI,cAAC,YAAD,CAAWM,OAAQ,CAAC,mBAApB,SACI,cAAC,OAAD,CACIzK,UAAU,qBACV0K,OAAO,aACPC,UAAU,EACVC,YAAY,MACZC,SAAU,KACVC,aAAc,EACdC,aAAc,EACdC,cAAe,CACXC,YAAa,SAACxJ,GAAD,OAAOA,EAAE2C,OAAO8G,MAAMC,QAAU,GAC7CC,aAAc,SAAC3J,GAAD,OAAOA,EAAE2C,OAAO8G,MAAMC,QAAU,IAC9CE,UA3BA,SAAClH,GACrB,IAAMmH,EAAWnH,EAAIC,OAAOmH,cAAcA,cAC1C5J,QAAQ0I,IAAIiB,EAASE,WACrB,IAAMtD,EAAIoD,EAASE,UAAU,GAAGC,QAAQ,6BAA8B,IACtE9J,QAAQ0I,IAAIiB,EAASE,WAErB7J,QAAQ0I,IAAInC,GACZvG,QAAQ0I,IAAIF,GAAQjC,MAsBJwD,SAAU,CAAEP,QAAS,cC3C9BQ,G,cAjCI,SAAC,GAA4E,IAA1E3L,EAAyE,EAAzEA,UAAW4L,EAA8D,EAA9DA,cAAelH,EAA+C,EAA/CA,SAA+C,IAArCmH,kBAAqC,MAA1B,SAA0B,MAAhB9K,cAAgB,MAAT,GAAS,EAC3F,EAAgC6C,mBAASgI,GAAzC,mBAAO/H,EAAP,KAAiBC,EAAjB,KACMI,EAAe,SAAAC,GAAG,OAAIL,GAAY,SAAAlD,GACpC,OAAO,2BAAIA,GAAX,kBAAkBuD,EAAIC,OAAOC,KAAQF,EAAIC,OAAOE,YAE9CwH,EAAY,kBAAMhI,EAAY8H,IAKpC,OACI,uBAAM5L,UAAWA,EAAW0E,SALX,SAAAP,GACjBA,EAAIQ,iBACJD,EAASb,EAAUiI,IAGnB,UACK/K,EAAOyI,KAAI,SAAA3H,GAAO,OACf,qBAAmB7B,UAAS,UAAKA,EAAL,qBAA5B,SACK6B,GADKA,MAIbmI,OAAOC,KAAK2B,GAAepC,KAAI,SAAAnF,GAAI,OAChC,gCACI,wBAAOa,QAASb,EAAhB,cAAwBA,EAAxB,QACA,uBACIpE,KAAK,OACLoE,KAAMA,EACNnE,GAAImE,EACJC,MAAOT,EAASQ,GAChBc,SAAUjB,MAPRG,MAWd,iCAASwH,SCINE,EA5BG,WACd,IAAM3J,EAAW6B,cACjB,EAA4BL,mBAAS,IAArC,mBAAO7C,EAAP,KAAeiL,EAAf,KAOMvJ,EAAK,uCAAG,aAA+BwJ,GAA/B,mBAAA5J,EAAA,6DAAShC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,SACW8B,EAASI,EAAc,CAAEnC,WAAUC,cAD9C,QACJ2H,EADI,QAECpH,QACPoL,IACAD,EAAU,IACVE,MAAM,aAAD,OAAcjE,EAAOnH,KAAKZ,MAE/B8L,EAAU,CAAC/D,EAAOlH,SAPZ,2CAAH,wDAWX,OAAO,cAAC,EAAD,CACHf,UAAU,QACV4L,cAlBgB,CAChBvL,SAAU,GACVC,SAAU,IAiBVoE,SAAUjC,EACVoJ,WAAW,QACX9K,OAAQA,KCIDoL,G,OA9BI,WACf,IAAM/J,EAAW6B,cACjB,EAA4BL,mBAAS,IAArC,mBAAO7C,EAAP,KAAeiL,EAAf,KAQMI,EAAM,uCAAG,aAA+BH,GAA/B,mBAAA5J,EAAA,6DAAShC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,SAAnB,SACU8B,EAASM,EAAa,CAAErC,WAAUC,cAD5C,QACL2H,EADK,QAEDpH,QACNoL,IACAC,MAAM,cAAD,OAAejE,EAAOnH,KAAKZ,MAEhC8L,EAAU,CAAC/D,EAAOlH,SANX,2CAAH,wDAYZ,OAAO,cAAC,EAAD,CACHf,UAAU,SACV4L,cAnBiB,CACjBvL,SAAU,GACVC,SAAU,IAkBVoE,SAAU0H,EACVP,WAAW,WACX9K,OAAQA,MCPDsL,MAnBf,WACmBpI,aACjB7B,CXUE,uCAAO,WAAgBA,GAAhB,eAAAC,EAAA,sEACgBjC,EAAQkM,YADxB,WAEiB,KADd7L,EADH,QAEMI,OAFN,uBAGCuB,EAAS,CAAEnC,KAAM,cAAesC,QAAS9B,EAAKQ,SAH/C,mBAIQ,GAJR,WAMiB,IAAhBR,EAAKI,OANN,uBAOCc,QAAQC,MAAMnB,EAAKM,QAPpB,mBAQQ,GARR,2CAAP,uDWTF,IAAMD,EAAO0C,aAAY,qBAAE1C,QAC3B,OACE,sBAAKd,UAAU,MAAf,UACGc,EAAKZ,GACJ,yCAAYY,EAAKT,SAAjB,OACA,8CAEF,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCXSkM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yFCoBRQ,GAAuB,GAqB7B,IAAMC,GAAsB,GAsB5B,IAAMC,GAAqB,GAaZC,iCAAgB,CAC3BlM,OAvDJ,WAAwD,IAAxCA,EAAuC,uDAA9B+L,GAAsBI,EAAQ,uCAEnD,OAAQA,EAAOnN,MACX,IAAK,cACD,IAAM6E,EAAW,IAAIQ,EAAM8H,EAAO7K,SAClC,OAAO,2BAAItB,GAAX,kBAAoB6D,EAAS5E,GAAK4E,IACtC,IAAK,cAGD,OAFA7D,EAAM,eAAOA,GACbmM,EAAO7K,QAAQwE,SAAQ,SAAA1F,GAAK,OAAIJ,EAAOI,EAAMnB,IAAMmB,KAC5CJ,EACX,IAAK,eACD,IAAMoM,EAAe,IAAI/H,EAAM8H,EAAO7K,SACtC,OAAO,2BAAKtB,GAAZ,kBAAqBoM,EAAanN,GAAKmN,IAE3C,QACI,OAAOpM,IAyCfH,KAdJ,WAAkD,IAApCA,EAAmC,uDAA5BoM,GAAoBE,EAAQ,uCAC7C,OAAQA,EAAOnN,MACX,IAAK,WACD,OAAOmN,EAAO7K,QAElB,IAAK,aACD,OAAO2K,GAEX,QACI,OAAOpM,IAMfwM,WApCJ,WAA2D,IAAvCrM,EAAsC,uDAA7BgM,GAAqBG,EAAQ,uCACtD,OAAQA,EAAOnN,MACX,IAAK,4BACD,MAAM,GAAN,mBAAWgB,GAAX,CAAmBmM,EAAO7K,UAE9B,IAAK,iCAED,OAAOtB,EAAOsG,QAAO,SAAAkB,GAAC,OAAIA,EAAExI,OAASmN,EAAO7K,QAAQtC,MAC5CwI,EAAE9E,WAAayJ,EAAO7K,QAAQoB,UAC9B8E,EAAE1D,QAAUqI,EAAO7K,QAAQwC,SAEvC,IAAK,qBAEL,MAAM,GAAN,OAAWkI,IAEX,QACI,OAAOhM,MCxDnBsM,aAAaC,QACb,IAAMC,GAAgB,CAClBhK,IAAK,OACLiK,YACAC,gBAAiBC,KAGfC,GAAmBC,YAAeL,GAAeM,IAG1CC,GAAQC,sBACjBJ,GACAK,8BACIC,0BAAgBC,OAcXC,GAAiBC,YAAaN,IC3BrCO,GACN,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAaS,QAAS,KAAMC,UAAWL,GAAvC,SACE,cAAC,EAAD,UAMNM,IAASC,OACPL,GACApL,SAASC,eAAe,SAM1BmJ,M","file":"static/js/main.9ddeaf65.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = () => {\n    return (\n        <div className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n            <span className=\"navbar-brand px-4\">Time Traker <i className=\"fas fa-chart-line fa-md\"></i></span>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navLinks\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse navbar-nav text-center justify-content-between mx-3\" id=\"navLinks\">\n\n                <a href=\"index.html\" className=\"nav-item nav-link active\">Dashboard</a>\n                {/* <!-- <a href=\"#\" class=\"nav-item nav-link \">Modify Shifts</a>\n                <a href=\"#\" class=\"nav-item nav-link\">Set Goals</a> --> */}\n                {/* <!-- <a href=\"all-hours.html\" class=\"nav-item nav-link\">See Stats</a> --> */}\n\n            </div>\n        </div>\n    )\n};\n\nexport default NavBar\n","import axios from \"axios\";\nclass UserApi {\n    static token = \"\";\n\n    static async login({username, password}) {\n        try {\n            const resp = await axios.post(\"/api/users/login\", { username, password });\n            this.token = resp.data.token;\n            return { status: true, user: resp.data.user };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n    static async register({username, password}) {\n        try {\n            const resp = await axios.post(\"api/users/register\", { username, password });\n            this.token = resp.data.token;\n            return { status: true, user: resp.data.user };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n    static async getShifts() {\n        if(!this.token) return { status: false, errors: [\"USER NOT LOGGED IN\"] };\n        try {\n            const shifts = [];\n            let resp;\n            let page = 0;\n            do {\n                resp = await axios.post(\"/api/users/shifts\", { token: this.token, page });\n                shifts.push(...resp.data.shifts)\n                page++;\n            } while (resp.data.shifts.length);\n\n            return { status: true, shifts };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n    static async addShift(shift) {\n        try {\n            const resp = await axios.post(\"/api/shifts/\", {shift, token: this.token});\n            return { status: true, shift: resp.data.shift };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n    static async clockOutShift(id, time) {\n        try {\n            const resp = await axios.patch(`/api/shifts/${id}`, { shift:{stop: time}, token: this.token });\n            return { status: true, shift: resp.data.shift };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n}\n\nfunction getMessagesFromErrorRes(e) {\n    if (e.response) {\n        console.error(\"API Error:\", e.response);\n        let message = e.response.data.error.message;\n        return Array.isArray(message) ? message : [message];\n    } else return [\"DB CONNECTION ERROR\"];\n}\n\nexport default UserApi;","import axios from \"axios\";\nimport UserApi from \"../api\";\n\nexport function startShift(type, category) {\n    return async function (dispatch) {\n        const newShift = {start: new Date(), type, category};\n        const resp = await UserApi.addShift(newShift);\n        if (resp.status === true) {\n            dispatch({ type: \"START_SHIFT\", payload: resp.shift });\n            return true;\n        }\n        if (resp.status === false) {\n            console.error(resp.errors);\n            return false;\n            //TODO make a queue for failed shift uploads to be merged later\n            //dispatch({ type: \"ADD_SHIFT_TO_UPLOAD_QUEUE\", payload: newShift })\n        }\n    }\n}\n\nexport function refreshShifts() {\n    return async function (dispatch) {\n        const resp = await UserApi.getShifts();\n        if (resp.status === true) {\n            dispatch({ type: \"LOAD_SHIFTS\", payload: resp.shifts });\n            return true;\n        }\n        if (resp.status === false) {\n            console.error(resp.errors);\n            return false;\n            //TODO make a queue for failed shift uploads to be merged later\n            //dispatch({ type: \"ADD_SHIFT_TO_UPLOAD_QUEUE\", payload: newShift })\n        }\n    }\n}\n\n\nexport function endShift(id) {\n    const stop = new Date();\n    return clockOutAt(id, stop);\n}\n\nexport function clockOutAt(shiftId, stop) {\n    return async function(dispatch) {\n        const resp = await UserApi.clockOutShift(shiftId, stop);\n        if (resp.status === true) {\n            dispatch({ type: \"UPDATE_SHIFT\", payload: resp.shift });\n            return true;\n        }\n        if (resp.status === false) {\n            //TODO effect the change on client side and \n            //  queue up the shift to be updated on next refresh\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\nexport function resetErrors() {\n    return { type: \"RESET_ERRORS\" };\n}\n\nexport function authorizeUser({ username, password }) {\n    return async function (dispatch) {\n        const resp = await UserApi.login({username, password});\n        if(resp.status === true)\n            dispatch({ type: \"SET_USER\", payload: resp.user });\n        return resp;\n    }\n}\n\nexport function registerUser({ username, password }) {\n    return async function (dispatch) {\n        const resp = await UserApi.register({ username, password });\n        if (resp.status === true)\n            dispatch({ type: \"SET_USER\", payload: resp.user });\n        return resp;\n    }\n}\n\n","import React from \"react\";\nconst InputAlert = ({ msg, persistence = 0 }) => {\n\n    const alertId = Math.random() + '-alert';\n\n    if(+persistence > 0){\n        setTimeout(() => {\n            document.getElementById(alertId).remove();\n        }, +persistence);\n    }\n\n    return (\n    <div className=\"alert bg-warning\" id={alertId}>\n        { msg }\n    </div>\n)};\nexport default InputAlert\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startShift } from \"./redux/actionCreators\";\nimport InputAlert from \"./InputAlert\";\n\nconst AddShift = () => {\n    let currShifts = useSelector(({ shifts }) => {\n        const currShifts = [];\n        for (let key in shifts) {\n            if (!shifts[key].stop) currShifts.push(shifts[key]);\n        }\n        return currShifts;\n    });\n    \n    const INIT = {type: \"\", category: \"\"};\n    const [ formData, setFormData ] = useState(INIT);\n    const [ inputAlerts, setInputAlerts ] = useState({});\n    const dispatch = useDispatch();\n\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(data => ({...data, [name]: value}));\n    }\n    function addAlert(name, msg) {\n        setInputAlerts(alerts => ({\n            ...alerts,\n            [name]: msg\n        }));\n\n        setTimeout(() => {\n            setInputAlerts(alerts => ({\n                ...alerts,\n                [name]: undefined\n            }));\n        }, 3000);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        const type = formData.type.toLowerCase();\n        const category = formData.category.toLowerCase();\n        \n        if(type  && category) {\n            if (currShifts.some(shift => shift.type===type && shift.category === category)) {\n                addAlert('both', `Already clocked in to ${type} for ${category}`); \n                return;\n            }\n            setFormData(INIT);\n            dispatch(startShift(type, category));\n        } else {\n            if(!type) addAlert('type', 'input must be filled');\n            if(!category) addAlert('category', 'input must be filled');\n        }\n    }\n\n    return (\n        <form id=\"new-shift\" className=\"col-xl border m-3 p-4 rounded shadow \" onSubmit={handleSubmit}>\n            <div className=\"row align-items-center justify-content-around\">\n                <h1 className=\"col-lg-3 col-xl-12 display-4 text-center\">New Shift!</h1>\n\n                <div className=\"col-12 col-lg-2 col-xl-5 m-2 mb-3\">\n                    <label htmlFor=\"type\" className=\"form-label\">Work-Type</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"type\" \n                            name=\"type\"\n                            value={formData.type}\n                            onChange={handleChange}\n                            placeholder=\"Coding\" \n                        />\n                    </div>\n                    {inputAlerts.type ? <InputAlert msg={inputAlerts.type} /> : null}\n                </div>\n                <div className=\" col-lg-3 col-xl-5 m-2 mb-3\">\n                    <label htmlFor=\"category\" className=\"form-label\">Category</label>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">For </span>\n                        </div>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"category\" \n                            name=\"category\"\n                            value={formData.category}\n                            onChange={handleChange}\n                            placeholder=\"Fun\" />\n                    </div>\n                    {inputAlerts.category ? <InputAlert msg={inputAlerts.category} /> : null}\n                </div>\n\n                <div id=\"clockin-buttons\" className=\"col m-2 mb-3\">\n                    {inputAlerts.both ? <InputAlert msg={inputAlerts.both} /> : null}\n\n                    <button type=\"submit\" className=\"btn btn-secondary col-12 p-3 px-md-5 \">Clock In</button>\n                </div>\n            </div>\n        </form>\n    )\n};\nexport default AddShift","/**\n * A shift class, representing time spent at a certain date on a thing for a reason\n * \n */\nclass Shift {\n    /**\n     * \n     * @param { Date } start \n     * @param { string } type \n     * @param { string } category  \n     * @param { Date } stop\n     */\n    constructor({ start, type, category, stop, id, u_id }) {\n        this.id = id;\n        this[\"u_id\"] = u_id;\n        if (start instanceof Date) this.start = start;\n        else this.start = new Date(start);\n\n        this.type = type;\n        this.category = category;\n        if (stop) {\n            if (stop instanceof Date) this.stop = stop;\n            else this.stop = new Date(stop);\n        }\n    }\n\n    /**\n     * returns the duration in Milliseconds\n     */\n    duration() {\n        if (this.stop) return this.stop.getTime() - this.start.getTime();\n        else return new Date().getTime() - this.start.getTime();\n    }\n\n    /**\n    * returns the hours as a decimal that the shift took to complete\n    */\n    getHours() {\n        return this.duration() / 3600000 //MS in an Hour\n    }\n\n    getFormattedDuration(specificity = 2) {\n        const duration = this.duration();\n        const durationFormatted = timeFormat(duration, specificity);\n        return durationFormatted;\n    }\n\n    equals(test, strict=true) {\n        if(typeof test !== 'object') return false;\n        else if (this.id && test.id && strict) {\n            if(this.id === test.id) return true;\n            else return false; \n        } else {\n            if (this.category === test.category) {\n                if (this.type === test.type) {\n                    if (this.start.getTime() === test.start.getTime()) return true;\n                    if (!strict) return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * sets the stop of the shift\n     *\n     * @param { Date } stop the stop Date/Time that this shift should stop, if none\n     *          specified it defaults to now.\n     */\n    clockOut(stop = new Date()) {\n        this.stop = stop;\n    }\n\n    /**\n     * stops the currents shift at splitDateTime and starts a new shift \n     *      at the same moment of the specified type and category\n     * \n     * @param { Date } splitDateTime the time to clock out the original shift\n     * @param { String } type the type that the newshift should take on \n     * @param { String } category the category the newshift take on, the same category if none specified\n     * @returns { Shift } returns the newly created shift \n     */\n    splitShift(splitDateTime, type, category = this.category) {\n        const newShift = new Shift({start: splitDateTime, type, category, stop: this.stop})\n        this.clockOut(splitDateTime);\n        return newShift;\n    }\n\n}\n\n\nclass ShiftCollection {\n    constructor(...newShifts) {\n        this.shifts = [];\n        this.add(...newShifts);\n    }\n\n    toString() {\n        return 'A ShiftCollection of length ' + this.length() + ' ' + this.shifts;\n    }\n    //future add with shifts being an object of objects of arrays\n    // tempState = { ...state };\n    // category = action.payload.category;\n    // type = action.payload.type;\n    // if(tempState[category]) {\n    //     if (tempState[category][type]) {\n    //         let temp = tempState[category][type];\n    //         tempState[category][type] = [...temp, action.payload];\n    //     } else {\n    //         tempState[category][type] = [action.payload];\n    //     }\n    // } else {\n    // tempState[category] = { [type]: [action.payload] };\n    add(...newShifts) {\n        for (let shift of newShifts) {\n            if (!(shift instanceof Shift)) {\n                shift = new Shift(shift);\n            }\n            this.shifts.push(shift);\n        }\n    }\n    getTotalHours() {\n        return this.shifts.reduce((totalHours, shift) => {\n            return totalHours + shift.getHours();\n        }, 0);\n    }\n\n    remove(removedShift) {\n        const shiftIndex = this.shifts.findIndex((shift) => {\n            if (shift.category === removedShift.category)\n                if (shift.type === removedShift.type)\n                    if (shift.start === removedShift.start) return true;\n            return false;\n        });\n\n        if (shiftIndex !== -1) {\n            this.shifts.splice(shiftIndex, 1);\n            return true;\n        }\n        else return false;\n    }\n\n    contains(someShift, strict = false) {\n        if (this.find(someShift, strict)) return true;\n        return false;\n    }\n    /**\n     * \n     * @param {string} initialCategory the initial category name to select the shifts\n     * @param {string} newCategory the name all shifts selected should be changed to\n     * @returns {boolean} true on success, false if no shifts of category initialCategory are found\n     */\n    changeCategory(initialCategory, newCategory) {\n        const shifts = this.category(initialCategory).shifts; //shift collection is returned, get the array out of it\n\n        if (shifts.length) {\n            shifts.forEach(shift => { shift.category = newCategory });\n            return true;\n        }\n        return false;\n    }\n\n    changeType(initialtype, newType) {\n        const shifts = this.type(initialtype).shifts; //shift collection is returned, get the array out of it\n        //if it's not empty\n        if (shifts.length) {\n            shifts.forEach(shift => { shift.type = newType });\n            return true;\n        }\n        //emtpy, ogType doesn't exist\n        return false;\n    }\n\n    find(someShift, strict = false) {\n        for (let shift of this.shifts) {\n            if(shift.equals(someShift, strict)) return shift;\n        }\n        return false;\n    }\n\n    getCategories() {\n        const categories = new Set();\n        for (let shift of this.shifts) {\n            categories.add(shift.category);\n        }\n        return [...categories];\n    }\n\n    getTypes() {\n        const types = new Set();\n        for (let shift of this.shifts) {\n            types.add(shift.type);\n        }\n        return [...types];\n    }\n\n    getShiftsAfter(dateTime) {\n        return new ShiftCollection(...this.shifts\n            .filter(({ start }) => dateTime.getTime() < start.getTime()));\n    }\n    getShiftsBefore(dateTime) {\n        return new ShiftCollection(...this.shifts\n            .filter(({ start }) => dateTime.getTime() < start.getTime()));\n    }\n\n    getCurrShifts() {\n        return new ShiftCollection(...(this.shifts.filter((shift) => !shift.stop)));\n    }\n\n    category(queryString) {\n        return this.filter('category', queryString);\n    }\n\n    type(queryString) {\n        return this.filter('type', queryString);\n    }\n\n    filter(field, query) {\n        const matched = this.shifts.filter(shift => shift[field] == query);\n        return new ShiftCollection(...matched);\n    }\n\n    length() { return this.shifts.length };\n}\n\n/**\n * returns a day representing x hours away from dateTime \n * \n * @param {number} hours the number of hours from dateTime you want\n * @param {Date} dateTime the dateTime you want to have a reference from(defaults to now)\n * @returns {Date} a new Date that is x hours from dateTime\n */\nfunction hoursFrom(hours, dateTime = new Date()) {\n    return new Date(dateTime.getTime() + (1000 * 60 * 60 * hours)); //1000ms * 60s * 60m * X hours\n}\n\n/**\n * returns a day representing x mins away from dateTime \n * \n * @param {number} mins the number of mins from dateTime you want\n * @param {Date} dateTime the dateTime you want to have a reference from(defaults to now)\n * @returns {Date} the Date that is x mins from dateTime\n */\nfunction minsFrom(mins, dateTime = new Date()) {\n    return new Date(dateTime.getTime() + (1000 * 60 * mins)); //1000ms * 60s * X mins\n}\n\n/**\n *\n * @param { number } ms A duration represented in Milliseconds negative values are returned as positive durations\n * @param { number } specificity How many scales of time you would like returned the biggest is always returned\n *\n */\nfunction timeFormat(ms, specificity) {\n\n    const MSINSEC = 1000;\n    const MSINMINUTE = 60000;\n    const MSINHOUR = 3600000;\n    const MSINDAY = 86400000;\n    const MSINMONTH = 2628000000;\n    const MSINYEAR = MSINMONTH * 12;\n\n\n\n    let result = '';\n    let i = 0;\n    if (ms < 0) {\n        result += '- ';\n        ms = ms * -1;\n    }\n\n    const y = Math.floor(ms / MSINYEAR);\n    if (y) {\n        i++;\n        ms = ms - (y * MSINYEAR);\n        result += y + ' years ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n\n    const mth = Math.floor(ms / MSINMONTH);\n    if (mth) {\n        i++;\n        ms = ms - (mth * MSINMONTH);\n        result += mth + ' Months ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const d = Math.floor(ms / MSINDAY);\n    if (d) {\n        i++;\n        ms = ms - (d * MSINDAY);\n        result += d + ' Days ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const h = Math.floor(ms / MSINHOUR);\n    if (h) {\n        i++;\n        ms = ms - (h * MSINHOUR);\n        result += h + ' Hours ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const min = Math.floor(ms / MSINMINUTE);\n    if (min) {\n        i++;\n        ms = ms - (min * MSINMINUTE);\n        result += min + ' mins ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    const s = Math.floor(ms / MSINSEC);\n    if (s) {\n        i++;\n        ms = ms - (s * MSINSEC);\n        result += s + ' seconds ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    /*\n    if (ms) {\n        i++;\n        result += ms + ' ms ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    */\n    return result;\n\n}\nfunction timeFormatFromHours(hrs, specificity) {\n    const ms = hrs * 3600000;\n    return timeFormat(ms, specificity);\n}\n\n//testing purposes #cleanUp\n// const deli = new ShiftCollection(...JSON.parse(localStorage.records));\n\nexport { ShiftCollection, Shift, minsFrom, hoursFrom }","import React, { useEffect, useState } from 'react';\nimport { clockOutAt, endShift } from './redux/actionCreators';\nimport { useDispatch } from 'react-redux';\nimport { Shift, minsFrom } from './ShiftCollection';\n\nconst NOW = \"NOW\";\nconst FIFTEEN_AGO = \"-15\";\n\nconst CurrShift = ({ shift }) => {\n\n    const dispatch = useDispatch();\n    const [duration, setDuration] = useState(shift.getFormattedDuration());\n    useEffect(() => {\n        const intervalId = setInterval(() => (\n            setDuration(shift.getFormattedDuration())\n        ), 1000);\n        return () => clearInterval(intervalId);\n    }, [shift, setDuration]);\n\n    function clockOut(evt) {\n        const clockoutDuration = evt.target.dataset.reference;\n\n        if(clockoutDuration === NOW) {\n            dispatch(endShift(shift.id));\n        } else if (clockoutDuration === FIFTEEN_AGO) {\n            const clockOut = minsFrom(-15); //-15 minutes from now\n            dispatch(clockOutAt(shift.id, clockOut));\n        }else {\n            console.error(\"ERROR \", clockoutDuration);\n            dispatch(endShift(shift.id));\n        }\n    }\n    return (\n        <li className=\"row p-3 align-items-start justify-content-center\" >\n            <div className=\"col-7 text-center h2\">\n                <span className=\"type\">{ shift.type } </span> for \n                <span className=\"category\"> { shift.category }</span> \n                <div className=\"shift-length\">\n                    { duration }\n                </div>\n            </div>\n            <div className=\"col-4 dropdown clockout\">\n                <button className=\"btn btn-secondary dropdown-toggle text-center\" data-bs-toggle=\"dropdown\">\n                    Clock Out\n                </button>\n                <div className=\"dropdown-menu clock-out\">\n                    <button className=\"btn\" data-reference={NOW} onClick={clockOut}>\n                        Now                    \n                    </button>\n                    <button className=\"btn\" data-reference={FIFTEEN_AGO} onClick={clockOut}>15 Mins Ago</button>\n                </div>\n            </div>\n        </li >\n    )\n};\n\nexport default CurrShift","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport CurrShift from './CurrShift';\nimport { Shift, ShiftCollection } from './ShiftCollection';\n\nconst CurrShiftList = () => {\n    let currShifts = useSelector(({ shifts }) => {\n        const currShifts = [];\n        for(let key in shifts){\n            if(!shifts[key].stop) currShifts.push(shifts[key]);\n        }\n        return currShifts;\n    });\n    currShifts = currShifts.map(shift => new Shift(shift));\n    return (\n        <div className=\"col-xl m-3 p-4 rounded shadow border\">\n            <div className=\"row align-items-center justify-content-around\">\n                <h1 className=\"display-4 text-center col-12 col-md-3 col-xl-12\">Current Shifts</h1>\n\n                <ul id=\"current-shifts\" className=\"col-12 col-md-9 col-xl-12\">\n                    {currShifts.map(shift => \n                        <CurrShift key={`${shift.type}-${shift.category}`} shift={shift} />\n                    )}\n                </ul>\n            </div>\n        </div>\n     )\n}\n\nexport default CurrShiftList","import React from 'react';\nimport AddShift from './AddShift';\nimport CurrShiftList from './CurrShiftList';\nconst Header = () => {\n    \n    return (\n        <div className=\"container-fluid p-2 align-items-center justify-content-around\">\n            <div className=\"row border m-3 p-4 rounded shadow justify-content-center\">\n                <AddShift />\n                <CurrShiftList />\n                \n            </div>\n        </div>\n    )\n};\nexport default Header","import React, {useState, useEffect, useRef, useCallback} from 'react'; \nimport { shallowEqual, useSelector } from 'react-redux';\nimport { Chart, Pies, Transform } from 'rumble-charts';\nimport { Shift, ShiftCollection } from './ShiftCollection';\n\nconst Dashboard = () => {\n    const allShifts = useSelector(({ shifts }) => shifts, shallowEqual);\n    const shiftsByCategory = {};\n    const currShifts = [];\n    for(let key in allShifts) {\n        const shift = new Shift(allShifts[key]);\n        if(!shift.stop) currShifts.push(shift);\n        if(shiftsByCategory[shift.category]){\n            shiftsByCategory[shift.category].add(shift);\n        } else {\n            shiftsByCategory[shift.category] = new ShiftCollection(shift);\n        }\n    }\n\n    const makeSeries = useCallback(() => Object.keys(shiftsByCategory).map(category => {\n        return {\n            data: [shiftsByCategory[category].getTotalHours()],\n            name: category\n        }\n    }))\n    const [series, setSeries] = useState(makeSeries());\n\n    console.log(series);\n    useEffect(()=> {\n        setSeries(makeSeries());\n    }, [allShifts, setSeries]);\n    useEffect(() => {\n        const intervalIdArray = currShifts.map(shift => {\n            return setInterval(() => {\n                setSeries(series => {\n                    return series.map(data => {\n                        if(data.name === shift.category) {\n                            data.data[0] += 4/60/60 //4 second / 60 secs in min / 60 mins in hour\n                            return {...data};\n                        } else {\n                            return data;\n                        }\n                    });\n                });\n            }, 4000);\n        });\n        return () => \n            intervalIdArray.forEach(id => clearInterval(id));\n    }, [allShifts, setSeries]);\n    \n\n    const displayCategory = (evt) => {\n        const pieSlice = evt.target.parentElement.parentElement;\n        console.log(pieSlice.classList);\n        const i = pieSlice.classList[1].replace(\"category-pie-chart-series-\", \"\");\n        console.log(pieSlice.classList);\n\n        console.log(i);\n        console.log(series[+i])\n    }\n    return (\n    <div id=\"hours-spent-dashboard\" className=\"jumbotron bg-light border m-3 p-4 rounded shadow  d-none d-md-block\" >\n        <h1 className=\"display-4 text-center col-12 col-md-3 col-xl-12\">\n            Hours Spent In Last Week\n        </h1>\n            <Chart width={600} height={250} series={series}>\n                <Transform method={['stackNormalized']}>\n                    <Pies\n                        className='category-pie-chart'\n                        colors='category10'\n                        combined={true}\n                        innerRadius='20%'\n                        padAngle={0.015}\n                        cornerRadius={5}\n                        innerPadding={2}\n                        pieAttributes={{\n                            onMouseMove: (e) => e.target.style.opacity = 1,\n                            onMouseLeave: (e) => e.target.style.opacity = 0.5,\n                            onMouseUp: displayCategory\n                        }}\n                        pieStyle={{ opacity: 0.5 }}\n                    />\n                </Transform>\n            </Chart>\n  </div >\n    )\n};\nexport default Dashboard","import React, { useState } from \"react\";\n\nimport './SimpleForm.css'\n\nconst SimpleForm = ( {className, INITIAL_STATE, onSubmit, submitText=\"Submit\", errors=[]} ) => {\n    const [formData, setFormData] = useState(INITIAL_STATE);\n    const handleChange = evt => setFormData(data => {\n        return {...data, [evt.target.name] : evt.target.value}\n    });\n    const resetForm = () => setFormData(INITIAL_STATE);\n    const handleSubmit = evt => {\n        evt.preventDefault(); \n        onSubmit(formData, resetForm);\n    };\n    return (\n        <form className={className} onSubmit={handleSubmit}>\n            {errors.map(message => \n                <div key={message} className={`${className}-error form-error`}>\n                    {message}\n                </div> \n            )}\n            {Object.keys(INITIAL_STATE).map(name => (\n                <div key={name}>\n                    <label htmlFor={name}> {name}: </label>\n                    <input\n                        type=\"text\"\n                        name={name}\n                        id={name}\n                        value={formData[name]}\n                        onChange={handleChange} \n                    />\n                </div>\n            ))}\n            <button>{submitText}</button>\n        </form> \n    )\n};\nexport default SimpleForm","import './Login.css';\n\nimport React, {useState} from \"react\";\nimport {useDispatch} from 'react-redux';\n// import { useHistory } from \"react-router\";\n// import UserContext from \"../UserContext\";\nimport { authorizeUser} from \"../redux/actionCreators\";\nimport SimpleForm from \"./SimpleForm\";\n\nconst LoginForm = () => {\n    const dispatch = useDispatch(); \n    const [errors, setErrors] = useState([]);\n\n    const loginInputs = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const login = async ({ username, password }, reset) => {\n        const result = await dispatch(authorizeUser({ username, password }));\n        if (result.status) {\n            reset();\n            setErrors([]);\n            alert(`logged In ${result.user.id}`);\n        } else {\n            setErrors([result.errors]);\n        }\n    }\n\n    return <SimpleForm \n        className=\"Login\" \n        INITIAL_STATE={loginInputs} \n        onSubmit={login}\n        submitText=\"Login\"\n        errors={errors}\n    />\n};\nexport default LoginForm","import './Signup.css';\n\nimport { useDispatch} from 'react-redux';\nimport { registerUser } from \"../redux/actionCreators\";\n\nimport React, { useState } from \"react\";\nimport SimpleForm from \"./SimpleForm\";\n\nconst SignupForm = () => {\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState([]);\n\n    \n    const signupInputs = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const signup = async ({ username, password }, reset) => {\n        const result = await dispatch(registerUser({ username, password }));\n        if(result.status) {\n            reset();\n            alert(`Registered ${result.user.id}`);\n        } else {\n            setErrors([result.errors]);\n        }\n        \n    }\n\n\n    return <SimpleForm \n        className=\"Signup\"\n        INITIAL_STATE={signupInputs}\n        onSubmit={signup}\n        submitText=\"Sign Up!\"\n        errors={errors}\n    />\n};\nexport default SignupForm","import './App.css';\nimport NavBar from './NavBar';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authorizeUser, refreshShifts } from './redux/actionCreators';\nimport LoginForm from './Forms/Login';\nimport SignupForm from './Forms/Signup';\n\nfunction App() {\n  const dispatch = useDispatch();\n  dispatch(refreshShifts());\n  const user = useSelector(({user})=> user);\n  return (\n    <div className=\"App\">\n      {user.id ? \n        <h1> HELLO {user.username} </h1> :\n        <h1>PLEASE LOGIN</h1>\n      }\n      <LoginForm />\n      <SignupForm />\n      <NavBar />\n      <Header />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { emit } from \"process\";\nimport { combineReducers } from \"redux\";\nimport {Shift} from \"../ShiftCollection\";\n// EX\n// import { combineReducers } from \"redux\";\n// function planets(state = INITIAL_STATE, action) {\n//     switch (action.type) {\n//         case RESET_ALL:\n//             return { ...INITIAL_STATE };\n\n//         case LOAD_PLANET:\n//             return {\n//                 ...state,\n//                 [action.payload.id]: { ...action.payload }\n//             };\n\n//         default:\n//             return state;\n//     }\n// }\n\n\n// export default combineReducers({\n//     films,\n//     planets,\n//     people,\n// });\nconst SHIFTS_INITIAL_STATE = {};\n\nfunction shifts(shifts = SHIFTS_INITIAL_STATE, action) {\n    \n    switch (action.type) {\n        case \"START_SHIFT\":\n            const newShift = new Shift(action.payload);\n            return {...shifts, [newShift.id]: newShift };\n        case \"LOAD_SHIFTS\":\n            shifts = {...shifts}\n            action.payload.forEach(shift => shifts[shift.id] = shift );\n            return shifts;\n        case \"UPDATE_SHIFT\":\n            const updatedShift = new Shift(action.payload);\n            return { ...shifts, [updatedShift.id]: updatedShift };\n            \n        default:\n            return shifts;\n    }\n}\n\nconst QUEUE_INITIAL_STATE = [];\n\nfunction shiftQueue(shifts = QUEUE_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"ADD_SHIFT_TO_UPLOAD_QUEUE\":\n            return [...shifts, action.payload];\n\n        case \"REMOVE_SHIFT_FROM_UPLOAD_QUEUE\":\n            //to be improved\n            return shifts.filter(s => s.type !== action.payload.type ||\n                    s.category !== action.payload.category ||\n                    s.start !== action.payload.start);\n        \n        case \"RESET_UPLOAD_QUEUE\":\n        //to be improved\n        return [...QUEUE_INITIAL_STATE];\n\n        default:\n            return shifts;\n    }\n}\n\nconst USER_INITIAL_STATE = {};\nfunction user(user = USER_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"SET_USER\":\n            return action.payload;\n\n        case \"RESET_USER\":\n            return USER_INITIAL_STATE;\n\n        default:\n            return user;\n    }\n}\nexport default combineReducers({\n    shifts,\n    user,\n    shiftQueue\n});","import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nimport thunk from \"redux-thunk\";\nimport root from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\n//merges the initial state with the incoming state with a shallow merge\n//reset everytime for testing\nlocalStorage.clear();\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    stateReconciler: autoMergeLevel2\n};\n\nconst persistedReducer = persistReducer(persistConfig, root);\n\n//the Redux Store\nexport const store = createStore(\n    persistedReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    )\n);\n\n/** an object containing \n * .purge()\n *    purges state from disk and returns a promise\n * .flush()\n *    immediately writes all pending state to disk and returns a promise\n * .pause()\n *    pauses persistence\n * .persist()\n *    resumes persistence\n */\nexport const persistedStore = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { store, persistedStore } from \"./redux/store\"\n\nconst index = (\n<React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistedStore}>\n      <App />\n    </PersistGate>\n  </Provider>\n</React.StrictMode>\n);\n\nReactDOM.render(\n  index,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}