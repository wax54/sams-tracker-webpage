{"version":3,"sources":["NavBar.js","redux/actionCreators.js","InputAlert.js","AddShift.js","ShiftCollection.js","CurrShift.js","CurrShiftList.js","Header.js","Dashboard.js","Forms/SimpleForm.js","Forms/Login.js","Forms/Signup.js","App.js","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js"],"names":["NavBar","className","type","id","href","getMessagesFromErrorRes","e","response","console","error","message","data","Array","isArray","endShift","payload","start","category","end","Date","authorizeUser","username","password","dispatch","a","axios","post","resp","user","status","errors","registerUser","InputAlert","msg","persistence","alertId","Math","random","setTimeout","document","getElementById","remove","AddShift","currShifts","useSelector","shifts","filter","shift","INIT","useState","formData","setFormData","inputAlerts","setInputAlerts","useDispatch","handleChange","evt","target","name","value","addAlert","alerts","undefined","onSubmit","preventDefault","toLowerCase","some","startShift","htmlFor","onChange","placeholder","both","Shift","this","getTime","duration","specificity","durationFormatted","timeFormat","test","strict","splitDateTime","newShift","clockOut","ShiftCollection","add","length","newShifts","push","reduce","totalHours","getHours","removedShift","shiftIndex","findIndex","splice","someShift","find","initialCategory","newCategory","forEach","initialtype","newType","equals","categories","Set","types","dateTime","queryString","field","query","matched","ms","MSINHOUR","MSINDAY","MSINMONTH","MSINYEAR","result","i","y","floor","mth","d","h","min","s","CurrShift","getFormattedDuration","setDuration","clockoutDuration","dataset","reference","mins","minsFrom","clockOutAt","useEffect","intervalId","setInterval","clearInterval","onClick","CurrShiftList","map","Header","Dashboard","allShifts","getCategories","getTotalHours","series","setSeries","getCurrShifts","setCurrShifts","intervalIdArray","newCurrShifts","every","idx","width","height","method","colors","combined","innerRadius","padAngle","cornerRadius","innerPadding","pieAttributes","onMouseMove","style","opacity","onMouseLeave","onMouseUp","pieSlice","parentElement","log","classList","replace","pieStyle","SimpleForm","INITIAL_STATE","submitText","resetForm","Object","keys","LoginForm","setErrors","login","reset","alert","SignupForm","signup","App","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHIFTS_INITIAL_STATE","ERRORS_INITIAL_STATE","USER_INITIAL_STATE","combineReducers","action","localStorage","clear","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","root","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistedStore","persistStore","index","StrictMode","loading","persistor","ReactDOM","render"],"mappings":"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","file":"static/js/main.45a7197f.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = () => {\n    return (\n        <div className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n            <span className=\"navbar-brand px-4\">Time Traker <i className=\"fas fa-chart-line fa-md\"></i></span>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navLinks\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse navbar-nav text-center justify-content-between mx-3\" id=\"navLinks\">\n\n                <a href=\"index.html\" className=\"nav-item nav-link active\">Dashboard</a>\n                {/* <!-- <a href=\"#\" class=\"nav-item nav-link \">Modify Shifts</a>\n                <a href=\"#\" class=\"nav-item nav-link\">Set Goals</a> --> */}\n                {/* <!-- <a href=\"all-hours.html\" class=\"nav-item nav-link\">See Stats</a> --> */}\n\n            </div>\n        </div>\n    )\n};\n\nexport default NavBar\n","import axios from \"axios\";\n\nfunction getMessagesFromErrorRes(e) {\n    if (e.response) {\n        console.error(\"API Error:\", e.response);\n        let message = e.response.data.error.message;\n        return Array.isArray(message) ? message : [message];\n    } else return [\"DB CONNECTION ERROR\"];\n}\n\nexport function startShift(type, category) {\n    const newShift = {start: new Date(), type, category};\n    return { type:\"START_SHIFT\", payload: newShift };\n}\n\nexport function endShift({ start, type, category }) {\n    const end = new Date();\n    const newShift = { start, type, category, end };\n    return { type: \"UPDATE_SHIFT\", payload: newShift };\n}\n\nexport function clockOutAt({ start, type, category }, end = new Date()) {\n    const newShift = { start, type, category, end };\n    return { type: \"UPDATE_SHIFT\", payload: newShift };\n}\n\nexport function resetErrors() {\n    return { type: \"RESET_ERRORS\" };\n}\n\nexport function authorizeUser({ username, password }) {\n    return async function (dispatch) {\n        try {\n            dispatch({ type: \"RESET_ERROR\"});\n            const resp = await axios.post(\"/api/users/login\", { username, password });\n            dispatch({ type: \"SET_USER\", payload: resp.data.user });\n            return { status: true, user: resp.data.user };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return {status: false, errors};\n        }\n    }\n}\n\nexport function registerUser({ username, password }) {\n    return async function (dispatch) {\n        try {\n            dispatch({ type: \"RESET_ERROR\" });\n            const resp = await axios.post(\"api/users/register\", {username, password });\n            dispatch({ type: \"SET_USER\", payload: resp.data.user });\n            return {status: true, user: resp.data.user};\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n}\n\n","import React from \"react\";\nconst InputAlert = ({ msg, persistence = 0 }) => {\n\n    const alertId = Math.random() + '-alert';\n\n    if(+persistence > 0){\n        setTimeout(() => {\n            document.getElementById(alertId).remove();\n        }, +persistence);\n    }\n\n    return (\n    <div className=\"alert bg-warning\" id={alertId}>\n        { msg }\n    </div>\n)};\nexport default InputAlert\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startShift } from \"./redux/actionCreators\";\nimport InputAlert from \"./InputAlert\";\n\nconst AddShift = () => {\n    const currShifts = useSelector(({ shifts }) => {\n        return shifts.filter((shift) => !shift.end);\n    });\n    \n    const INIT = {type: \"\", category: \"\"};\n    const [ formData, setFormData ] = useState(INIT);\n    const [ inputAlerts, setInputAlerts ] = useState({});\n    const dispatch = useDispatch();\n\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(data => ({...data, [name]: value}));\n    }\n    function addAlert(name, msg) {\n        setInputAlerts(alerts => ({\n            ...alerts,\n            [name]: msg\n        }));\n\n        setTimeout(() => {\n            setInputAlerts(alerts => ({\n                ...alerts,\n                [name]: undefined\n            }));\n        }, 3000);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        const type = formData.type.toLowerCase();\n        const category = formData.category.toLowerCase();\n        \n        if(type  && category) {\n            if (currShifts.some(shift => shift.type===type && shift.category === category)) {\n                addAlert('both', `Already clocked in to ${type} for ${category}`); \n                return;\n            }\n            setFormData(INIT);\n            dispatch(startShift(type, category));\n        } else {\n            if(!type) addAlert('type', 'input must be filled');\n            if(!category) addAlert('category', 'input must be filled');\n        }\n    }\n\n    return (\n        <form id=\"new-shift\" className=\"col-xl border m-3 p-4 rounded shadow \" onSubmit={handleSubmit}>\n            <div className=\"row align-items-center justify-content-around\">\n                <h1 className=\"col-lg-3 col-xl-12 display-4 text-center\">New Shift!</h1>\n\n                <div className=\"col-12 col-lg-2 col-xl-5 m-2 mb-3\">\n                    <label htmlFor=\"type\" className=\"form-label\">Work-Type</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"type\" \n                            name=\"type\"\n                            value={formData.type}\n                            onChange={handleChange}\n                            placeholder=\"Coding\" \n                        />\n                    </div>\n                    {inputAlerts.type ? <InputAlert msg={inputAlerts.type} /> : null}\n                </div>\n                <div className=\" col-lg-3 col-xl-5 m-2 mb-3\">\n                    <label htmlFor=\"category\" className=\"form-label\">Category</label>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">For </span>\n                        </div>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"category\" \n                            name=\"category\"\n                            value={formData.category}\n                            onChange={handleChange}\n                            placeholder=\"Fun\" />\n                    </div>\n                    {inputAlerts.category ? <InputAlert msg={inputAlerts.category} /> : null}\n                </div>\n\n                <div id=\"clockin-buttons\" className=\"col m-2 mb-3\">\n                    {inputAlerts.both ? <InputAlert msg={inputAlerts.both} /> : null}\n\n                    <button type=\"submit\" className=\"btn btn-secondary col-12 p-3 px-md-5 \">Clock In</button>\n                </div>\n            </div>\n        </form>\n    )\n};\nexport default AddShift","/**\n * A shift class, representing time spent at a certain date on a thing for a reason\n * \n */\nclass Shift {\n    /**\n     * \n     * @param { Date } start \n     * @param { string } type \n     * @param { string } category  \n     * @param { Date } end\n     */\n    constructor({ start, type, category, end }) {\n        if (start instanceof Date) this.start = start;\n        else this.start = new Date(start);\n\n        this.type = type;\n        this.category = category;\n        if (end) {\n            if (end instanceof Date) this.end = end;\n            else this.end = new Date(end);\n        }\n    }\n\n    /**\n     * returns the duration in Milliseconds\n     */\n    duration() {\n        if (this.end) return this.end.getTime() - this.start.getTime();\n        else return new Date().getTime() - this.start.getTime();\n    }\n\n    /**\n    * returns the hours as a decimal that the shift took to complete\n    */\n    getHours() {\n        return this.duration() / 3600000 //MS in an Hour\n    }\n\n    getFormattedDuration(specificity = 2) {\n        const duration = this.duration();\n        const durationFormatted = timeFormat(duration, specificity);\n        return durationFormatted;\n    }\n\n    equals(test, strict=true) {\n        if(typeof test !== 'object') return false;\n        if (this.category === test.category) {\n            if (this.type === test.type) {\n                if (this.start.getTime() === test.start.getTime()) return true;\n                if (!strict) return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * sets the end of the shift\n     *\n     * @param { Date } end the end Date/Time that this shift should end, if none\n     *          specified it defaults to now.\n     */\n    clockOut(end = new Date()) {\n        this.end = end;\n    }\n\n    /**\n     * ends the currents shift at splitDateTime and starts a new shift \n     *      at the same moment of the specified type and category\n     * \n     * @param { Date } splitDateTime the time to clock out the original shift\n     * @param { String } type the type that the newshift should take on \n     * @param { String } category the category the newshift take on, the same category if none specified\n     * @returns { Shift } returns the newly created shift \n     */\n    splitShift(splitDateTime, type, category = this.category) {\n        const newShift = new Shift({start: splitDateTime, type, category, end: this.end})\n        this.clockOut(splitDateTime);\n        return newShift;\n    }\n\n}\n\n\nclass ShiftCollection {\n    constructor(...newShifts) {\n        this.shifts = [];\n        this.add(...newShifts);\n    }\n\n    toString() {\n        return 'A ShiftCollection of length ' + this.length() + ' ' + this.shifts;\n    }\n    //future add with shifts being an object of objects of arrays\n    // tempState = { ...state };\n    // category = action.payload.category;\n    // type = action.payload.type;\n    // if(tempState[category]) {\n    //     if (tempState[category][type]) {\n    //         let temp = tempState[category][type];\n    //         tempState[category][type] = [...temp, action.payload];\n    //     } else {\n    //         tempState[category][type] = [action.payload];\n    //     }\n    // } else {\n    // tempState[category] = { [type]: [action.payload] };\n    add(...newShifts) {\n        for (let shift of newShifts) {\n            if (!(shift instanceof Shift)) {\n                shift = new Shift(shift);\n            }\n            this.shifts.push(shift);\n        }\n    }\n    getTotalHours() {\n        return this.shifts.reduce((totalHours, shift) => {\n            return totalHours + shift.getHours();\n        }, 0);\n    }\n\n    remove(removedShift) {\n        const shiftIndex = this.shifts.findIndex((shift) => {\n            if (shift.category === removedShift.category)\n                if (shift.type === removedShift.type)\n                    if (shift.start === removedShift.start) return true;\n            return false;\n        });\n\n        if (shiftIndex !== -1) {\n            this.shifts.splice(shiftIndex, 1);\n            return true;\n        }\n        else return false;\n    }\n\n    contains(someShift, strict = false) {\n        if (this.find(someShift, strict)) return true;\n        return false;\n    }\n    /**\n     * \n     * @param {string} initialCategory the initial category name to select the shifts\n     * @param {string} newCategory the name all shifts selected should be changed to\n     * @returns {boolean} true on success, false if no shifts of category initialCategory are found\n     */\n    changeCategory(initialCategory, newCategory) {\n        const shifts = this.category(initialCategory).shifts; //shift collection is returned, get the array out of it\n\n        if (shifts.length) {\n            shifts.forEach(shift => { shift.category = newCategory });\n            return true;\n        }\n        return false;\n    }\n\n    changeType(initialtype, newType) {\n        const shifts = this.type(initialtype).shifts; //shift collection is returned, get the array out of it\n        //if it's not empty\n        if (shifts.length) {\n            shifts.forEach(shift => { shift.type = newType });\n            return true;\n        }\n        //emtpy, ogType doesn't exist\n        return false;\n    }\n\n    find(someShift, strict = false) {\n        for (let shift of this.shifts) {\n            if(shift.equals(someShift, strict)) return shift;\n        }\n        return false;\n    }\n\n    getCategories() {\n        const categories = new Set();\n        for (let shift of this.shifts) {\n            categories.add(shift.category);\n        }\n        return [...categories];\n    }\n\n    getTypes() {\n        const types = new Set();\n        for (let shift of this.shifts) {\n            types.add(shift.type);\n        }\n        return [...types];\n    }\n\n    getShiftsAfter(dateTime) {\n        return new ShiftCollection(...this.shifts\n            .filter(({ start }) => dateTime.getTime() < start.getTime()));\n    }\n    getShiftsBefore(dateTime) {\n        return new ShiftCollection(...this.shifts\n            .filter(({ start }) => dateTime.getTime() < start.getTime()));\n    }\n\n    getCurrShifts() {\n        return new ShiftCollection(...(this.shifts.filter((shift) => !shift.end)));\n    }\n\n    category(queryString) {\n        return this.filter('category', queryString);\n    }\n\n    type(queryString) {\n        return this.filter('type', queryString);\n    }\n\n    filter(field, query) {\n        const matched = this.shifts.filter(shift => shift[field] == query);\n        return new ShiftCollection(...matched);\n    }\n\n    length() { return this.shifts.length };\n}\n\n/**\n * returns a day representing x hours away from dateTime \n * \n * @param {number} hours the number of hours from dateTime you want\n * @param {Date} dateTime the dateTime you want to have a reference from(defaults to now)\n * @returns {Date} a new Date that is x hours from dateTime\n */\nfunction hoursFrom(hours, dateTime = new Date()) {\n    return new Date(dateTime.getTime() + (1000 * 60 * 60 * hours)); //1000ms * 60s * 60m * X hours\n}\n\n/**\n * returns a day representing x mins away from dateTime \n * \n * @param {number} mins the number of mins from dateTime you want\n * @param {Date} dateTime the dateTime you want to have a reference from(defaults to now)\n * @returns {Date} the Date that is x mins from dateTime\n */\nfunction minsFrom(mins, dateTime = new Date()) {\n    return new Date(dateTime.getTime() + (1000 * 60 * mins)); //1000ms * 60s * X mins\n}\n\n/**\n *\n * @param { number } ms A duration represented in Milliseconds negative values are returned as positive durations\n * @param { number } specificity How many scales of time you would like returned the biggest is always returned\n *\n */\nfunction timeFormat(ms, specificity) {\n\n    const MSINSEC = 1000;\n    const MSINMINUTE = 60000;\n    const MSINHOUR = 3600000;\n    const MSINDAY = 86400000;\n    const MSINMONTH = 2628000000;\n    const MSINYEAR = MSINMONTH * 12;\n\n\n\n    let result = '';\n    let i = 0;\n    if (ms < 0) {\n        result += '- ';\n        ms = ms * -1;\n    }\n\n    const y = Math.floor(ms / MSINYEAR);\n    if (y) {\n        i++;\n        ms = ms - (y * MSINYEAR);\n        result += y + ' years ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n\n    const mth = Math.floor(ms / MSINMONTH);\n    if (mth) {\n        i++;\n        ms = ms - (mth * MSINMONTH);\n        result += mth + ' Months ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const d = Math.floor(ms / MSINDAY);\n    if (d) {\n        i++;\n        ms = ms - (d * MSINDAY);\n        result += d + ' Days ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const h = Math.floor(ms / MSINHOUR);\n    if (h) {\n        i++;\n        ms = ms - (h * MSINHOUR);\n        result += h + ' Hours ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const min = Math.floor(ms / MSINMINUTE);\n    if (min) {\n        i++;\n        ms = ms - (min * MSINMINUTE);\n        result += min + ' mins ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    const s = Math.floor(ms / MSINSEC);\n    if (s) {\n        i++;\n        ms = ms - (s * MSINSEC);\n        result += s + ' seconds ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    /*\n    if (ms) {\n        i++;\n        result += ms + ' ms ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    */\n    return result;\n\n}\nfunction timeFormatFromHours(hrs, specificity) {\n    const ms = hrs * 3600000;\n    return timeFormat(ms, specificity);\n}\n\n//testing purposes #cleanUp\n// const deli = new ShiftCollection(...JSON.parse(localStorage.records));\n\nexport { ShiftCollection, Shift, minsFrom, hoursFrom }","import React, { useEffect, useState } from 'react';\nimport { clockOutAt, endShift } from './redux/actionCreators';\nimport { useDispatch } from 'react-redux';\nimport { Shift, minsFrom } from './ShiftCollection';\n\nconst NOW = \"NOW\";\nconst FIFTEEN_AGO = \"-15\";\n\nconst CurrShift = ({ shift }) => {\n\n    const dispatch = useDispatch();\n    const [duration, setDuration] = useState(shift.getFormattedDuration());\n    useEffect(() => {\n        const intervalId = setInterval(() => (\n            setDuration(shift.getFormattedDuration())\n        ), 1000);\n        return () => clearInterval(intervalId);\n    }, [shift, setDuration]);\n\n    function clockOut(evt) {\n        const clockoutDuration = evt.target.dataset.reference;\n\n        if(clockoutDuration === NOW) {\n            dispatch(endShift(shift));\n        } else if (clockoutDuration === FIFTEEN_AGO) {\n            const clockOut = minsFrom(-15); //-15 minutes from now\n            dispatch(clockOutAt(shift, clockOut));\n        }else {\n            console.error(\"ERROR \", clockoutDuration);\n            dispatch(endShift(shift));\n        }\n    }\n    return (\n        <li className=\"row p-3 align-items-start justify-content-center\" >\n            <div className=\"col-7 text-center h2\">\n                <span className=\"type\">{ shift.type } </span> for \n                <span className=\"category\"> { shift.category }</span> \n                <div className=\"shift-length\">\n                    { duration }\n                </div>\n            </div>\n            <div className=\"col-4 dropdown clockout\">\n                <button className=\"btn btn-secondary dropdown-toggle text-center\" data-bs-toggle=\"dropdown\">\n                    Clock Out\n                </button>\n                <div className=\"dropdown-menu clock-out\">\n                    <button className=\"btn\" data-reference={NOW} onClick={clockOut}>\n                        Now                    \n                    </button>\n                    <button className=\"btn\" data-reference={FIFTEEN_AGO} onClick={clockOut}>15 Mins Ago</button>\n                </div>\n            </div>\n        </li >\n    )\n};\n\nexport default CurrShift","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport CurrShift from './CurrShift';\nimport { Shift, ShiftCollection } from './ShiftCollection';\n\nconst CurrShiftList = () => {\n    let currShifts = useSelector(({ shifts }) => {\n        return shifts.filter((shift) => !shift.end)\n    });\n    currShifts = currShifts.map(shift => new Shift(shift));\n    return (\n        <div className=\"col-xl m-3 p-4 rounded shadow border\">\n            <div className=\"row align-items-center justify-content-around\">\n                <h1 className=\"display-4 text-center col-12 col-md-3 col-xl-12\">Current Shifts</h1>\n\n                <ul id=\"current-shifts\" className=\"col-12 col-md-9 col-xl-12\">\n                    {currShifts.map(shift => \n                        <CurrShift key={`${shift.type}-${shift.category}`} shift={shift} />\n                    )}\n                </ul>\n            </div>\n        </div>\n     )\n}\n\nexport default CurrShiftList","import React from 'react';\nimport AddShift from './AddShift';\nimport CurrShiftList from './CurrShiftList';\nconst Header = () => {\n    \n    return (\n        <div className=\"container-fluid p-2 align-items-center justify-content-around\">\n            <div className=\"row border m-3 p-4 rounded shadow justify-content-center\">\n                <AddShift />\n                <CurrShiftList />\n                \n            </div>\n        </div>\n    )\n};\nexport default Header","import React, {useState, useEffect, useRef} from 'react'; \nimport { useSelector } from 'react-redux';\nimport { Chart, Pies, Transform } from 'rumble-charts';\nimport { ShiftCollection } from './ShiftCollection';\n\nconst Dashboard = () => {\n    const allShifts = useSelector(({ shifts }) => {\n        return new ShiftCollection(...shifts);\n    });\n\n    const categories = allShifts.getCategories();\n\n    const [series, setSeries] = useState(categories.map(category => {\n        return {\n            data: [allShifts.category(category).getTotalHours()],\n            name: category\n        }\n    }));\n\n    \n    const [currShifts, setCurrShifts] = useState(allShifts.getCurrShifts().shifts);\n\n    \n    useEffect(() => {\n        const intervalIdArray = currShifts.map(shift => {\n            return setInterval(() => {\n                setSeries(series => {\n                    return series.map(data => {\n                        if(data.name === shift.category) {\n                            data.data[0] += 4/60/60 //4 second / 60 secs in min / 60 mins in hour\n                            return {...data};\n                        } else {\n                            return data;\n                        }\n                    });\n                });\n            }, 4000);\n        });\n        return () => \n            intervalIdArray.forEach(id => clearInterval(id));\n    }, [currShifts, setSeries]);\n    \n    const newCurrShifts = allShifts.getCurrShifts().shifts;\n    const shiftsUpToDate = newCurrShifts.every((shift, idx) => {\n        return shift.equals(currShifts[idx]);\n    });\n    \n    if (!shiftsUpToDate) {\n        setCurrShifts(newCurrShifts);\n        return;\n    }\n\n    const displayCategory = (evt) => {\n        const pieSlice = evt.target.parentElement.parentElement;\n        console.log(pieSlice.classList);\n        const i = pieSlice.classList[1].replace(\"category-pie-chart-series-\", \"\");\n        console.log(pieSlice.classList);\n\n        console.log(i);\n        console.log(series[+i])\n    }\n    return (\n    <div id=\"hours-spent-dashboard\" className=\"jumbotron bg-light border m-3 p-4 rounded shadow  d-none d-md-block\" >\n        <h1 className=\"display-4 text-center col-12 col-md-3 col-xl-12\">\n            Hours Spent In Last Week\n        </h1>\n            <Chart width={600} height={250} series={series}>\n                <Transform method={['stackNormalized']}>\n                    <Pies\n                        className='category-pie-chart'\n                        colors='category10'\n                        combined={true}\n                        innerRadius='20%'\n                        padAngle={0.015}\n                        cornerRadius={5}\n                        innerPadding={2}\n                        pieAttributes={{\n                            onMouseMove: (e) => e.target.style.opacity = 1,\n                            onMouseLeave: (e) => e.target.style.opacity = 0.5,\n                            onMouseUp: displayCategory\n                        }}\n                        pieStyle={{ opacity: 0.5 }}\n                    />\n                </Transform>\n            </Chart>\n  </div >\n    )\n};\nexport default Dashboard","import React, { useState } from \"react\";\n\nimport './SimpleForm.css'\n\nconst SimpleForm = ( {className, INITIAL_STATE, onSubmit, submitText=\"Submit\", errors=[]} ) => {\n    const [formData, setFormData] = useState(INITIAL_STATE);\n    const handleChange = evt => setFormData(data => {\n        return {...data, [evt.target.name] : evt.target.value}\n    });\n    const resetForm = () => setFormData(INITIAL_STATE);\n    const handleSubmit = evt => {\n        evt.preventDefault(); \n        onSubmit(formData, resetForm);\n    };\n    return (\n        <form className={className} onSubmit={handleSubmit}>\n            {errors.map(message => \n                <div key={message} className={`${className}-error form-error`}>\n                    {message}\n                </div> \n            )}\n            {Object.keys(INITIAL_STATE).map(name => (\n                <div key={name}>\n                    <label htmlFor={name}> {name}: </label>\n                    <input\n                        type=\"text\"\n                        name={name}\n                        id={name}\n                        value={formData[name]}\n                        onChange={handleChange} \n                    />\n                </div>\n            ))}\n            <button>{submitText}</button>\n        </form> \n    )\n};\nexport default SimpleForm","import './Login.css';\n\nimport React, {useState} from \"react\";\nimport {useDispatch} from 'react-redux';\n// import { useHistory } from \"react-router\";\n// import UserContext from \"../UserContext\";\nimport { authorizeUser} from \"../redux/actionCreators\";\nimport SimpleForm from \"./SimpleForm\";\n\nconst LoginForm = () => {\n    const dispatch = useDispatch(); \n    const [errors, setErrors] = useState([]);\n\n    const loginInputs = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const login = async ({ username, password }, reset) => {\n        const result = await dispatch(authorizeUser({ username, password }));\n        if (result.status) {\n            reset();\n            alert(`logged In ${result.user.id}`);\n        } else {\n            setErrors([result.errors]);\n        }\n    }\n\n    return <SimpleForm \n        className=\"Login\" \n        INITIAL_STATE={loginInputs} \n        onSubmit={login}\n        submitText=\"Login\"\n        errors={errors}\n    />\n};\nexport default LoginForm","import './Signup.css';\n\nimport { useDispatch} from 'react-redux';\nimport { registerUser } from \"../redux/actionCreators\";\n\nimport React, { useState } from \"react\";\nimport SimpleForm from \"./SimpleForm\";\n\nconst SignupForm = () => {\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState([]);\n\n    \n    const signupInputs = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const signup = async ({ username, password }, reset) => {\n        const result = await dispatch(registerUser({ username, password }));\n        if(result.status) {\n            reset();\n            alert(`Registered ${result.user.id}`);\n        } else {\n            setErrors([result.errors]);\n        }\n        \n    }\n\n\n    return <SimpleForm \n        className=\"Signup\"\n        INITIAL_STATE={signupInputs}\n        onSubmit={signup}\n        submitText=\"Sign Up!\"\n        errors={errors}\n    />\n};\nexport default SignupForm","import './App.css';\nimport NavBar from './NavBar';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authorizeUser } from './redux/actionCreators';\nimport LoginForm from './Forms/Login';\nimport SignupForm from './Forms/Signup';\n\nfunction App() {\n  const user = useSelector(({user})=> user);\n  return (\n    <div className=\"App\">\n      <h1>{Object.keys(user).map(key => user[key])}</h1>\n      <LoginForm />\n      <SignupForm />\n      <NavBar />\n      <Header />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { emit } from \"process\";\nimport { combineReducers } from \"redux\";\nimport {Shift} from \"../ShiftCollection\";\n// EX\n// import { combineReducers } from \"redux\";\n// function planets(state = INITIAL_STATE, action) {\n//     switch (action.type) {\n//         case RESET_ALL:\n//             return { ...INITIAL_STATE };\n\n//         case LOAD_PLANET:\n//             return {\n//                 ...state,\n//                 [action.payload.id]: { ...action.payload }\n//             };\n\n//         default:\n//             return state;\n//     }\n// }\n\n\n// export default combineReducers({\n//     films,\n//     planets,\n//     people,\n// });\nconst SHIFTS_INITIAL_STATE = [];\n\nfunction shifts(shifts = SHIFTS_INITIAL_STATE, action) {\n    let newShift;\n    switch (action.type) {\n        case \"START_SHIFT\":\n            newShift = new Shift(action.payload);\n            return [...shifts, newShift ];\n\n        case \"UPDATE_SHIFT\":\n            newShift = new Shift(action.payload);\n            return shifts.map(shift => {\n                shift = new Shift(shift);\n                return shift.equals(newShift, true) ?\n                    action.payload :\n                    shift\n            });\n\n        default:\n            return shifts;\n    }\n}\n\nconst ERRORS_INITIAL_STATE = [];\n\nfunction errors(errors = ERRORS_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"ADD_ERROR\":\n            return [...errors, action.payload];\n\n        case \"REMOVE_ERROR\":\n            //to be improved\n            return errors.filter(e => e.message !== action.payload.message);\n        \n        case \"RESET_ERROR\":\n        //to be improved\n        return ERRORS_INITIAL_STATE;\n\n        default:\n            return errors;\n    }\n}\n\nconst USER_INITIAL_STATE = {};\nfunction user(user = USER_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"SET_USER\":\n            return action.payload;\n\n        case \"RESET_USER\":\n            return USER_INITIAL_STATE;\n\n        default:\n            return user;\n    }\n}\nexport default combineReducers({\n    shifts,\n    user,\n    errors\n});","import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nimport thunk from \"redux-thunk\";\nimport root from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\n//merges the initial state with the incoming state with a shallow merge\n//reset everytime for testing\nlocalStorage.clear();\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    stateReconciler: autoMergeLevel2\n};\n\nconst persistedReducer = persistReducer(persistConfig, root);\n\n//the Redux Store\nexport const store = createStore(\n    persistedReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    )\n);\n\n/** an object containing \n * .purge()\n *    purges state from disk and returns a promise\n * .flush()\n *    immediately writes all pending state to disk and returns a promise\n * .pause()\n *    pauses persistence\n * .persist()\n *    resumes persistence\n */\nexport const persistedStore = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { store, persistedStore } from \"./redux/store\"\n\nconst index = (\n<React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistedStore}>\n      <App />\n    </PersistGate>\n  </Provider>\n</React.StrictMode>\n);\n\nReactDOM.render(\n  index,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}