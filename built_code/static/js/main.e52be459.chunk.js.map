{"version":3,"sources":["models/Api.js","models/redux/actionCreators.js","components/NavBar.js","components/InputAlert.js","components/AddShift.js","models/ShiftCollection.js","components/ClockOutButton.js","components/CurrShift.js","components/CurrShiftList.js","components/Header.js","helpers/hooks.js","config.js","components/goals/GoalStats.js","components/ShiftsPieChart.js","components/Dashboard.js","components/scenes/Home.js","components/forms/SimpleForm.js","components/forms/Login.js","components/forms/Signup.js","components/Profile.js","components/goals/NewGoal.js","components/goals/GoalRow.js","components/goals/GoalList.js","components/scenes/SetGoals.js","components/forms/MultiTextBox.js","components/shifts/ShiftRow.js","components/shifts/ShiftList.js","components/scenes/EditShifts.js","components/Routes.js","components/scenes/App.js","helpers/reportWebVitals.js","models/redux/reducers.js","models/redux/store.js","index.js"],"names":["API_URL","userPersist","localStorage","USERTOKEN","token","UserApi","method","url","data","headers","this","Authorization","dataType","axios","resp","status","errors","getMessagesFromErrorRes","username","password","request","user","shifts","page","console","log","push","length","shift","id","time","stop","goals","goal","seconds_per_day","category","type","deleted","e","response","error","message","Array","isArray","updateShift","payload","endShift","clockOutAt","Date","shiftId","dispatch","a","clockOutShift","setUser","userData","authorizeUser","login","getShifts","getGoals","registerUser","register","addGoal","newGoal","NavBar","useDispatch","useSelector","className","exact","to","onClick","InputAlert","msg","persistence","alertId","Math","random","setTimeout","document","getElementById","remove","AddShift","currShifts","key","INIT","useState","formData","setFormData","inputAlerts","setInputAlerts","handleChange","evt","target","name","value","addAlert","alerts","undefined","onSubmit","preventDefault","toLowerCase","some","newShift","start","addShift","startShift","htmlFor","onChange","placeholder","both","Shift","u_id","getTime","duration","specificity","durationFormatted","timeFormat","test","strict","splitDateTime","clockOut","ShiftCollection","add","sortParam","SORT_PARAMS","START","direction","DESCENDING","ASCENDING","sort","shift1","shift2","newShifts","reduce","totalHours","getHours","removedShift","shiftIndex","findIndex","splice","someShift","find","initialCategory","newCategory","forEach","initialtype","newType","equals","categories","Set","types","dateTime","filter","queryString","field","query","matched","ms","MSINHOUR","MSINDAY","MSINMONTH","MSINYEAR","result","i","y","floor","mth","d","h","min","s","STOP","CATEGORY","TYPE","ID","UID","ClockOutButton","clockoutDuration","dataset","reference","mins","minsFrom","style","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","CurrShift","getFormattedDuration","setDuration","useEffect","intervalId","setInterval","clearInterval","CurrShiftList","map","Header","getWindowDimensions","window","width","innerWidth","height","innerHeight","useFormFields","init","resetForm","DOING_ANYTHING_KEY","GoalStats","hours","timeFrame","val","title","goalsByCategory","textAlign","Object","keys","goalHours","currHours","percent","position","animate","margin","nrOfLevels","formatTextValue","marginIn","textColor","arcWidth","colors","arcPadding","ShiftsPieChart","series","size","options","pieHole","chartArea","slices","legend","labeledValueText","textStyle","color","fontSize","pieSliceText","pieSliceTextStyle","chartEvents","eventName","callback","chartWrapper","google","chart","getChart","visualization","events","addListener","slice","targetID","replace","warn","row","chartType","loader","rootProps","Dashboard","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","setSize","allShifts","shallowEqual","shiftsByCategory","makeSeries","useCallback","getTotalHours","setSeries","Home","SimpleForm","INITIAL_STATE","submitText","LoginForm","history","useHistory","setErrors","reset","SignupForm","signup","alert","Profile","NewGoal","values","getCategories","handleSubmit","seconds","max","getTypes","GoalRow","ceil","text","newHours","updateGoal","updateAGoal","removeGoal","deleteGoal","GoalList","timeFrames","day","week","month","SetGoals","setTimeFrame","MultiTextBox","clicked","setClicked","setVal","state","ShiftRow","setStyle","update","newVal","updatedShift","updateAShift","backgroundColor","deleteShift","ShiftList","shiftsBy","EditShifts","Routes","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SHIFTS_INITIAL_STATE","GOALS_INITIAL_STATE","QUEUE_INITIAL_STATE","USER_INITIAL_STATE","combineReducers","action","shiftQueue","nGoal","seeking","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","root","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistedStore","persistStore","index","StrictMode","loading","persistor","ReactDOM","render"],"mappings":"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","file":"static/js/main.e52be459.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet API_URL;\nif(process.env.NODE_ENV !== \"production\") {\n    //set the API to call port 5000 if not in productions\n    API_URL = \"http://localhost:5000/api\";\n} else {\n    //if in production, call the api endpoint of itself\n    API_URL = \"/api\";\n}\n\nconst userPersist = {\n    get: function () {\n        return localStorage.USERTOKEN || \"\";\n    },\n    set: function (token) {\n        return localStorage.USERTOKEN = token;\n    }\n}\n\nclass UserApi {\n    static token = userPersist.get();\n    static async request({ method=\"get\", url, data }) {\n        try {\n            const headers = this.token ?\n                { Authorization: `${this.token}` } \n                :   {};\n            const dataType  = \n                (method === \"get\") ? \"params\" : \"data\" ;\n            // data = (method === \"delete\") ? { data: data } : data;\n\n            const resp = await axios({\n                method,\n                url,\n                [dataType]: data,\n                headers,\n            });\n            return { status: true, data: resp.data };\n        } catch (e) {\n            const errors = getMessagesFromErrorRes(e);\n            return { status: false, errors };\n        }\n    }\n\n    //USERS\n\n    static async login({ username, password }) {\n        const resp = await this.request({\n            method: \"post\",\n            url: API_URL + \"/users/login\", \n            data: { username, password }\n        });\n        if (resp.status === false) return resp;\n\n        this.token = resp.data.token;\n        userPersist.set(this.token);\n        return { status: true, user: resp.data.user };\n    }\n\n    static async register({username, password}) {\n        const resp = await this.request({\n            method:\"post\",\n            url: API_URL + \"/users/register\", \n            data: { username, password }\n        });\n        if (resp.status === false) return resp;\n        this.token = resp.data.token;\n        userPersist.set(this.token);\n        return { status: true, user: resp.data.user };\n    }\n\n    //SHIFTS\n    static async getShifts() {\n        if(!this.token) return { status: false, errors: [\"USER NOT LOGGED IN\"] };\n        const shifts = [];\n        let resp;\n        let page = 0;\n        do {\n            resp = await this.request({\n                method: 'get',\n                url: API_URL + \"/users/shifts\", \n                data: { page } \n            });\n            console.log(resp);\n            if(resp.status === false) return resp;\n            shifts.push(...resp.data.shifts)\n            page++;\n        } while (resp.data.shifts.length);\n        return { status: true, shifts };\n    }\n\n\n    static async addShift(shift) {\n        const resp = await this.request({\n            method: \"post\",\n            url: API_URL + \"/shifts\", \n            data: { shift }\n        });\n        if(resp.status === false) return resp;\n        else return { status: true, shift: resp.data.shift };\n    }\n    \n    static async updateShift(id, shift) {\n        const resp = await this.request({\n            method: \"patch\",\n            url: API_URL + `/shifts/${id}`, \n            data: { shift }\n        });\n        if (resp.status === false) return resp;\n        return { status: true, shift: resp.data.shift };\n        \n    }\n    static async clockOutShift(id, time) {\n        const resp = await this.request({\n            method: \"patch\",\n            url: API_URL + `/shifts/${id}`, \n            data:{ shift:{stop: time} }\n        });\n        if (resp.status === false) return resp;\n        return { status: true, shift: resp.data.shift };\n    \n    }\n    static async deleteShift(id) {\n        const resp = await this.request({\n            method: \"delete\",\n            url: API_URL + `/shifts/${id}`\n        });\n        if (resp.status === false) return resp;\n        return { status: true };\n    }\n\n    //GOALS\n    static async getGoals() {\n        const resp = await this.request({\n            method: \"get\",\n            url: API_URL + `/users/goals`});\n        if (resp.status === false) return resp;\n        return { status: true, goals: resp.data.goals };\n        \n    }\n    static async addGoal(goal) {\n        const resp = await this.request({\n            method: \"post\",\n            url: API_URL + \"/goals\", \n            data: { goal }\n        });\n        if (resp.status === false) return resp;\n        return { status: true, goal: resp.data.goal };\n    }\n\n\n    static async updateGoal({ category, type },  seconds_per_day ) {\n\n        const resp = await this.request({\n            method: \"patch\",\n            url: API_URL + \"/goals/\", \n            data: { goal: { seconds_per_day, category, type }}\n        });\n        if (resp.status === false) return resp;\n        console.log(resp);\n        return { status: true, goal: resp.data.goal };\n        \n    }\n\n    static async removeGoal({ category, type }) {\n        const resp = await this.request({\n            method: \"delete\",\n            url: API_URL + `/goals/`,\n            data:{ goal: {type, category} }\n        });\n        if (resp.status === false) return resp;\n        return { status: resp.data.deleted };\n    }\n}\n\nfunction getMessagesFromErrorRes(e) {\n    if (e.response) {\n        console.error(\"API Error:\", e.response);\n        let message = e.response.data.error.message;\n        return Array.isArray(message) ? message : [message];\n    } else return [\"DB CONNECTION ERROR\"];\n}\n\nexport default UserApi;","import UserApi from \"../Api\";\n/** SHIFTS */\nexport function startShift(type, category) {\n    return async function (dispatch) {\n        const newShift = {start: new Date(), type, category};\n        const resp = await UserApi.addShift(newShift);\n        if (resp.status === true) {\n            dispatch({ type: \"START_SHIFT\", payload: resp.shift });\n            return true;\n        }\n        if (resp.status === false) {\n            console.error(resp.errors);\n            return false;\n            //TODO make a queue for failed shift uploads to be merged later\n            //dispatch({ type: \"ADD_SHIFT_TO_UPLOAD_QUEUE\", payload: newShift })\n        }\n    }\n}\n\nexport function resetShifts() {\n    return { type: \"RESET_SHIFTS\" };\n}\n\nexport function loadShifts() {\n    return async function (dispatch) {\n        const resp = await UserApi.getShifts();\n        if (resp.status === true) {\n            dispatch({ type: \"LOAD_SHIFTS\", payload: resp.shifts });\n            return true;\n        }\n        if (resp.status === false) {\n            console.error(resp.errors);\n            return false;\n            //TODO make a queue for failed shift uploads to be merged later\n            //dispatch({ type: \"ADD_SHIFT_TO_UPLOAD_QUEUE\", payload: newShift })\n        }\n    }\n}\n\nexport function refreshShifts() {\n    return async function (dispatch) {\n        dispatch(resetShifts());\n        return await dispatch(loadShifts());\n    }\n}\n\nexport function updateShift(shift) {\n    return { type: \"UPDATE_SHIFT\", payload: shift };\n}\n\nexport function updateAShift(shift) {\n    return async function (dispatch) {\n        const resp = await UserApi.updateShift(shift.id, shift);\n        if (resp.status === true) {\n            dispatch(updateShift(resp.shift));\n            return true;\n        }\n        if (resp.status === false) {\n            //TODO effect the change on client side and \n            //  queue up the shift to be updated on next refresh\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\nexport function endShift(id) {\n    const stop = new Date();\n    return clockOutAt(id, stop);\n}\n\nexport function clockOutAt(shiftId, stop) {\n    return async function (dispatch) {\n        const resp = await UserApi.clockOutShift(shiftId, stop);\n        if (resp.status === true) {\n            dispatch(updateShift(resp.shift));\n            return true;\n        }\n        if (resp.status === false) {\n            //TODO effect the change on client side and \n            //  queue up the shift to be updated on next refresh\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\nexport function deleteShift(shiftId) {\n    return async function (dispatch) {\n        const resp = await UserApi.deleteShift(shiftId);\n        if (resp.status === true) {\n            dispatch({ type: \"DELETE_SHIFT\", shiftId: shiftId });\n            return true;\n        }\n        if (resp.status === false) {\n            //TODO effect the change on client side and \n            //  queue up the shift to be updated on next refresh\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\n/** ERRORS (depreciated) */\nexport function resetErrors() {\n    return { type: \"RESET_ERRORS\" };\n}\n\n\n/** Users */\nexport function setUser(userData) {\n    return { type: \"SET_USER\", payload: userData };\n}\nexport function resetUser() {\n    return async function (dispatch) { \n        dispatch({ type: \"RESET_USER\" });\n        dispatch(resetShifts());\n        dispatch(resetGoals());\n    }\n}\nexport function authorizeUser({ username, password }) {\n    return async function (dispatch) {\n        const resp = await UserApi.login({username, password});\n        if(resp.status === true)\n            dispatch(setUser(resp.user));\n            await dispatch(refreshShifts());\n            await dispatch(refreshGoals());\n\n        return resp;\n    }\n}\n\nexport function registerUser({ username, password }) {\n    return async function (dispatch) {\n        const resp = await UserApi.register({ username, password });\n        if (resp.status === true)\n            dispatch(setUser(resp.user));\n            dispatch(resetShifts());\n            dispatch(resetGoals());\n        return resp;\n    }\n}\n\n/** GOALS */\nexport function addGoal({type, category, seconds_per_day}) {\n    return async function (dispatch) {\n        const newGoal= { seconds_per_day, type, category };\n        const resp = await UserApi.addGoal(newGoal);\n        if (resp.status === true) {\n            dispatch({ type: \"ADD_GOAL\", payload: resp.goal });\n            return true;\n        }\n        if (resp.status === false) {\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\nexport function resetGoals() {\n    return { type: \"RESET_GOALS\" };\n}\n\nexport function loadGoals() {\n    return async function (dispatch) {\n        const resp = await UserApi.getGoals();\n        console.log(resp);\n        if (resp.status === true) {\n            dispatch({ type: \"LOAD_GOALS\", payload: resp.goals });\n            return true;\n        }\n        if (resp.status === false) {\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\nexport function refreshGoals() {\n    return async function (dispatch) {\n        dispatch(resetGoals());\n        return await dispatch(loadGoals());\n    }\n}\n\nexport function updateGoal({type, category, seconds_per_day}) {\n    return { type: \"UPDATE_GOAL\", payload: {type, category, seconds_per_day} };\n}\n\nexport function updateAGoal({ type, category, seconds_per_day }) {\n    return async function (dispatch) {\n\n        const resp = await UserApi.updateGoal({type, category}, seconds_per_day);\n        if (resp.status === true) {\n            console.log(resp);\n            dispatch(updateGoal(resp.goal));\n            return true;\n        }\n        if (resp.status === false) {\n            //TODO effect the change on client side and \n            //  queue up the shift to be updated on next refresh\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}\n\nexport function deleteGoal({ type, category }) {\n    return async function (dispatch) {\n        const resp = await UserApi.removeGoal({category, type});\n\n        if (resp.status === true) {\n            dispatch({ type: \"DELETE_GOAL\", payload: {category, type} });\n            return true;\n        } else {\n            //TODO effect the change on client side and \n            //  queue up the shift to be updated on next refresh\n            console.error(resp.errors);\n            return false;\n        }\n    }\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { resetUser } from '../models/redux/actionCreators';\nconst NavBar = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(({user}) => user);\n\n    const logoutUser = () => {\n        dispatch(resetUser());\n    }\n    return (\n        <div className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\n            <span className=\"navbar-brand px-4\">Time Traker <i className=\"fas fa-chart-line fa-md\"></i></span>\n\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navLinks\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse navbar-nav text-center justify-content-between mx-3\" id=\"navLinks\">\n                {user.id ?\n                <>\n\n                    <NavLink exact to=\"/\" className=\"nav-item nav-link\">Home</NavLink>\n                    <NavLink exact to=\"/profile\" className=\"nav-item nav-link\">Profile</NavLink>\n                    <NavLink exact to=\"/edit-shifts\" className=\"nav-item nav-link\">Modify Shifts</NavLink>\n                    <NavLink exact to=\"/set-goals\" className=\"nav-item nav-link\">Set Goals</NavLink>\n                    <NavLink exact onClick={logoutUser} to=\"/logout\" className=\"nav-item nav-link bg-danger\">Logout</NavLink>\n\n                </> : <>\n                    <NavLink exact to=\"/login\" className=\"nav-item nav-link\">Login</NavLink>\n                    <NavLink exact to=\"/signup\" className=\"nav-item nav-link\">Sign Up</NavLink>\n                </>\n                }\n                {/* <a href=\"all-hours.html\" class=\"nav-item nav-link\">See Stats</a> */}\n\n            </div>\n        </div>\n    )\n};\n\nexport default NavBar\n","import React from \"react\";\nconst InputAlert = ({ msg, persistence = 0 }) => {\n\n    const alertId = Math.random() + '-alert';\n\n    if(+persistence > 0){\n        setTimeout(() => {\n            document.getElementById(alertId).remove();\n        }, +persistence);\n    }\n\n    return (\n    <div className=\"alert bg-warning\" id={alertId}>\n        { msg }\n    </div>\n)};\nexport default InputAlert\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startShift } from \"../models/redux/actionCreators\";\nimport InputAlert from \"./InputAlert\";\n\nconst AddShift = () => {\n    let currShifts = useSelector(({ shifts }) => {\n        const currShifts = [];\n        for (let key in shifts) {\n            if (!shifts[key].stop) currShifts.push(shifts[key]);\n        }\n        return currShifts;\n    });\n    \n    const INIT = {type: \"\", category: \"\"};\n    const [ formData, setFormData ] = useState(INIT);\n    const [ inputAlerts, setInputAlerts ] = useState({});\n    const dispatch = useDispatch();\n\n    function handleChange(evt) {\n        const { name, value } = evt.target;\n        setFormData(data => ({...data, [name]: value}));\n    }\n    function addAlert(name, msg) {\n        setInputAlerts(alerts => ({\n            ...alerts,\n            [name]: msg\n        }));\n\n        setTimeout(() => {\n            setInputAlerts(alerts => ({\n                ...alerts,\n                [name]: undefined\n            }));\n        }, 3000);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        const type = formData.type.toLowerCase();\n        const category = formData.category.toLowerCase();\n        \n        if(type  && category) {\n            if (currShifts.some(shift => shift.type===type && shift.category === category)) {\n                addAlert('both', `Already clocked in to ${type} for ${category}`); \n                return;\n            }\n            setFormData(INIT);\n            dispatch(startShift(type, category));\n        } else {\n            if(!type) addAlert('type', 'input must be filled');\n            if(!category) addAlert('category', 'input must be filled');\n        }\n    }\n\n    return (\n        <form id=\"new-shift\" className=\"col-xl border m-3 p-4 rounded shadow \" onSubmit={handleSubmit}>\n            <div className=\"row align-items-center justify-content-around\">\n                <h1 className=\"col-lg-3 col-xl-12 display-4 text-center\">New Shift!</h1>\n\n                <div className=\"col-12 col-lg-2 col-xl-5 m-2 mb-3\">\n                    <label htmlFor=\"type\" className=\"form-label\">Work-Type</label>\n                    <div className=\"input-group\">\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"type\" \n                            name=\"type\"\n                            value={formData.type}\n                            onChange={handleChange}\n                            placeholder=\"Coding\" \n                        />\n                    </div>\n                    {inputAlerts.type ? <InputAlert msg={inputAlerts.type} /> : null}\n                </div>\n                <div className=\" col-lg-3 col-xl-5 m-2 mb-3\">\n                    <label htmlFor=\"category\" className=\"form-label\">Category</label>\n                    <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">For </span>\n                        </div>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"category\" \n                            name=\"category\"\n                            value={formData.category}\n                            onChange={handleChange}\n                            placeholder=\"Fun\" />\n                    </div>\n                    {inputAlerts.category ? <InputAlert msg={inputAlerts.category} /> : null}\n                </div>\n\n                <div id=\"clockin-buttons\" className=\"col m-2 mb-3\">\n                    {inputAlerts.both ? <InputAlert msg={inputAlerts.both} /> : null}\n\n                    <button type=\"submit\" className=\"btn btn-secondary col-12 p-3 px-md-5 \">Clock In</button>\n                </div>\n            </div>\n        </form>\n    )\n};\nexport default AddShift","/**\n * A shift class, representing time spent at a certain date on a thing for a reason\n * \n */\nclass Shift {\n    /**\n     * \n     * @param { Date } start \n     * @param { string } type \n     * @param { string } category  \n     * @param { Date } stop\n     * @param { Number } id\n     * @param { Number } u_id\n     */\n    constructor({ start, type, category, stop, id, u_id }) {\n        this.id = id;\n        this.u_id = u_id;\n        if (start instanceof Date) this.start = start;\n        else this.start = new Date(start);\n\n        this.type = type;\n        this.category = category;\n        if (stop) {\n            if (stop instanceof Date) this.stop = stop;\n            else this.stop = new Date(stop);\n        }\n    }\n\n    /**\n     * returns the duration in Milliseconds\n     */\n    duration() {\n        if (this.stop) return this.stop.getTime() - this.start.getTime();\n        else return new Date().getTime() - this.start.getTime();\n    }\n\n    /**\n    * returns the hours as a decimal that the shift took to complete\n    */\n    getHours() {\n        return this.duration() / 3600000 //MS in an Hour\n    }\n\n    getFormattedDuration(specificity = 2) {\n        const duration = this.duration();\n        const durationFormatted = timeFormat(duration, specificity);\n        return durationFormatted;\n    }\n\n    equals(test, strict=true) {\n        if(typeof test !== 'object') return false;\n        else if (this.id && test.id && strict) {\n            if(this.id === test.id) return true;\n            else return false; \n        } else {\n            if (this.category === test.category) {\n                if (this.type === test.type) {\n                    if (this.start.getTime() === test.start.getTime()) return true;\n                    if (!strict) return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * sets the stop of the shift\n     *\n     * @param { Date } stop the stop Date/Time that this shift should stop, if none\n     *          specified it defaults to now.\n     */\n    clockOut(stop = new Date()) {\n        this.stop = stop;\n    }\n\n    /**\n     * stops the currents shift at splitDateTime and starts a new shift \n     *      at the same moment of the specified type and category\n     * \n     * @param { Date } splitDateTime the time to clock out the original shift\n     * @param { String } type the type that the newshift should take on \n     * @param { String } category the category the newshift take on, the same category if none specified\n     * @returns { Shift } returns the newly created shift \n     */\n    splitShift(splitDateTime, type, category = this.category) {\n        const newShift = new Shift({start: splitDateTime, type, category, stop: this.stop})\n        this.clockOut(splitDateTime);\n        return newShift;\n    }\n\n}\n\n\nclass ShiftCollection {\n    static SORT_PARAMS = {\n        START: \"start\",\n        STOP: \"stop\",\n        CATEGORY: \"category\",\n        TYPE: \"type\",\n        ID: \"id\",\n        UID: \"u_id\",\n        ASCENDING: \"ascending\",\n        DESCENDING: \"descending\"\n    };\n\n    constructor(...newShifts) {\n        this.shifts = [];\n        this.add(...newShifts);\n    }\n\n    shiftsBy(sortParam = ShiftCollection.SORT_PARAMS.START, direction = ShiftCollection.SORT_PARAMS.DESCENDING) {\n        const shifts = [...this.shifts];\n        if(direction === ShiftCollection.SORT_PARAMS.ASCENDING)\n            return shifts.sort((shift1, shift2) => shift1[sortParam] > shift2[sortParam] ? 1 : -1);\n        else {\n            return shifts.sort((shift1, shift2) => shift2[sortParam] > shift1[sortParam] ? 1 : -1);\n        }\n    }\n\n    toString() {\n        return 'A ShiftCollection of length ' + this.length() + ' ' + this.shifts;\n    }\n    //future add with shifts being an object of objects of arrays\n    // tempState = { ...state };\n    // category = action.payload.category;\n    // type = action.payload.type;\n    // if(tempState[category]) {\n    //     if (tempState[category][type]) {\n    //         let temp = tempState[category][type];\n    //         tempState[category][type] = [...temp, action.payload];\n    //     } else {\n    //         tempState[category][type] = [action.payload];\n    //     }\n    // } else {\n    // tempState[category] = { [type]: [action.payload] };\n    add(...newShifts) {\n        for (let shift of newShifts) {\n            if (!(shift instanceof Shift)) {\n                shift = new Shift(shift);\n            }\n            this.shifts.push(shift);\n        }\n    }\n    getTotalHours() {\n        return this.shifts.reduce((totalHours, shift) => {\n            return totalHours + shift.getHours();\n        }, 0);\n    }\n\n    remove(removedShift) {\n        const shiftIndex = this.shifts.findIndex((shift) => {\n            if (shift.category === removedShift.category)\n                if (shift.type === removedShift.type)\n                    if (shift.start === removedShift.start) return true;\n            return false;\n        });\n\n        if (shiftIndex !== -1) {\n            this.shifts.splice(shiftIndex, 1);\n            return true;\n        }\n        else return false;\n    }\n\n    contains(someShift, strict = false) {\n        if (this.find(someShift, strict)) return true;\n        return false;\n    }\n    /**\n     * \n     * @param {string} initialCategory the initial category name to select the shifts\n     * @param {string} newCategory the name all shifts selected should be changed to\n     * @returns {boolean} true on success, false if no shifts of category initialCategory are found\n     */\n    changeCategory(initialCategory, newCategory) {\n        const shifts = this.category(initialCategory).shifts; //shift collection is returned, get the array out of it\n\n        if (shifts.length) {\n            shifts.forEach(shift => { shift.category = newCategory });\n            return true;\n        }\n        return false;\n    }\n\n    changeType(initialtype, newType) {\n        const shifts = this.type(initialtype).shifts; //shift collection is returned, get the array out of it\n        //if it's not empty\n        if (shifts.length) {\n            shifts.forEach(shift => { shift.type = newType });\n            return true;\n        }\n        //emtpy, ogType doesn't exist\n        return false;\n    }\n\n    find(someShift, strict = false) {\n        for (let shift of this.shifts) {\n            if(shift.equals(someShift, strict)) return shift;\n        }\n        return false;\n    }\n\n    getCategories() {\n        const categories = new Set();\n        for (let shift of this.shifts) {\n            categories.add(shift.category);\n        }\n        return [...categories];\n    }\n\n    getTypes() {\n        const types = new Set();\n        for (let shift of this.shifts) {\n            types.add(shift.type);\n        }\n        return [...types];\n    }\n\n    getShiftsAfter(dateTime) {\n        return new ShiftCollection(...this.shifts\n            .filter(({ start }) => dateTime.getTime() < start.getTime()));\n    }\n    getShiftsBefore(dateTime) {\n        return new ShiftCollection(...this.shifts\n            .filter(({ start }) => dateTime.getTime() < start.getTime()));\n    }\n\n    getCurrShifts() {\n        return new ShiftCollection(...(this.shifts.filter((shift) => !shift.stop)));\n    }\n\n    category(queryString) {\n        return this.filter('category', queryString);\n    }\n\n    type(queryString) {\n        return this.filter('type', queryString);\n    }\n\n    filter(field, query) {\n        const matched = this.shifts.filter(shift => shift[field] == query);\n        return new ShiftCollection(...matched);\n    }\n\n    length() { return this.shifts.length };\n}\n\n/**\n * returns a day representing x hours away from dateTime \n * \n * @param {number} hours the number of hours from dateTime you want\n * @param {Date} dateTime the dateTime you want to have a reference from(defaults to now)\n * @returns {Date} a new Date that is x hours from dateTime\n */\nfunction hoursFrom(hours, dateTime = new Date()) {\n    return new Date(dateTime.getTime() + (1000 * 60 * 60 * hours)); //1000ms * 60s * 60m * X hours\n}\n\n/**\n * returns a day representing x mins away from dateTime \n * \n * @param {number} mins the number of mins from dateTime you want\n * @param {Date} dateTime the dateTime you want to have a reference from(defaults to now)\n * @returns {Date} the Date that is x mins from dateTime\n */\nfunction minsFrom(mins, dateTime = new Date()) {\n    return new Date(dateTime.getTime() + (1000 * 60 * mins)); //1000ms * 60s * X mins\n}\n\n/**\n *\n * @param { number } ms A duration represented in Milliseconds negative values are returned as positive durations\n * @param { number } specificity How many scales of time you would like returned the biggest is always returned\n *\n */\nfunction timeFormat(ms, specificity) {\n\n    const MSINSEC = 1000;\n    const MSINMINUTE = 60000;\n    const MSINHOUR = 3600000;\n    const MSINDAY = 86400000;\n    const MSINMONTH = 2628000000;\n    const MSINYEAR = MSINMONTH * 12;\n\n\n\n    let result = '';\n    let i = 0;\n    if (ms < 0) {\n        result += '- ';\n        ms = ms * -1;\n    }\n\n    const y = Math.floor(ms / MSINYEAR);\n    if (y) {\n        i++;\n        ms = ms - (y * MSINYEAR);\n        result += y + ' years ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n\n    const mth = Math.floor(ms / MSINMONTH);\n    if (mth) {\n        i++;\n        ms = ms - (mth * MSINMONTH);\n        result += mth + ' Months ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const d = Math.floor(ms / MSINDAY);\n    if (d) {\n        i++;\n        ms = ms - (d * MSINDAY);\n        result += d + ' Days ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const h = Math.floor(ms / MSINHOUR);\n    if (h) {\n        i++;\n        ms = ms - (h * MSINHOUR);\n        result += h + ' Hours ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n\n    const min = Math.floor(ms / MSINMINUTE);\n    if (min) {\n        i++;\n        ms = ms - (min * MSINMINUTE);\n        result += min + ' mins ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    const s = Math.floor(ms / MSINSEC);\n    if (s) {\n        i++;\n        ms = ms - (s * MSINSEC);\n        result += s + ' seconds ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    /*\n    if (ms) {\n        i++;\n        result += ms + ' ms ';\n        if (i == specificity) {\n            return result;\n        }\n    }\n    */\n    return result;\n\n}\nfunction timeFormatFromHours(hrs, specificity) {\n    const ms = hrs * 3600000;\n    return timeFormat(ms, specificity);\n}\n\n//testing purposes #cleanUp\n// const deli = new ShiftCollection(...JSON.parse(localStorage.records));\n\nexport { ShiftCollection, Shift, minsFrom, hoursFrom }","import React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { minsFrom } from '../models/ShiftCollection';\nimport { clockOutAt, endShift } from '../models/redux/actionCreators';\nconst NOW = \"NOW\";\nconst FIFTEEN_AGO = \"-15\";\n\nconst ClockOutButton = ({ shiftId }) => {\n    const dispatch = useDispatch();\n    \n    function clockOut(evt) {\n        const clockoutDuration = evt.target.dataset.reference;\n\n        if (clockoutDuration === NOW) {\n            dispatch(endShift(shiftId));\n        } else if (clockoutDuration === FIFTEEN_AGO) {\n            \n            const clockOut = minsFrom(-15); //-15 minutes from now\n            console.log(clockOut);\n            dispatch(clockOutAt(shiftId, clockOut));\n        } else {\n            console.error(\"ERROR \", clockoutDuration);\n            dispatch(endShift(shiftId));\n        }\n    }\n    return (\n        <>\n            <div className=\"dropdown clockout row align-items-start justify-content-center\">\n                <button className=\"btn btn-secondary col-10 text-center\" \n                    style={{ borderTopRightRadius: 0, borderBottomRightRadius: 0 }}\n                    data-reference={NOW} onClick={clockOut}\n                >\n                    Clock Out\n                </button>\n                <button className=\"btn btn-secondary col-2 dropdown-toggle text-center\" style={{ borderTopLeftRadius: 0, borderBottomLeftRadius: 0}} data-bs-toggle=\"dropdown\" />\n                \n                <div className=\"dropdown-menu clock-out\">\n                    <button className=\"btn btn-block\" data-reference={FIFTEEN_AGO} onClick={clockOut}>\n                        15 Mins Ago\n                    </button>\n                </div>\n            </div>\n        </>\n)};\nexport default ClockOutButton","import React, { useEffect, useState } from 'react';\nimport ClockOutButton from './ClockOutButton';\n\nconst CurrShift = ({ shift }) => {\n\n    const [duration, setDuration] = useState(shift.getFormattedDuration());\n    useEffect(() => {\n        const intervalId = setInterval(() => (\n            setDuration(shift.getFormattedDuration())\n        ), 1000);\n        return () => clearInterval(intervalId);\n    }, [shift, setDuration]);\n\n    \n    return (\n        <li className=\"row p-3 align-items-start justify-content-center\" >\n            <div className=\"col-7 text-center h2\">\n                <span className=\"type\">{ shift.type } </span> for \n                <span className=\"category\"> { shift.category }</span> \n                <div className=\"shift-length\">\n                    { duration }\n                </div>\n            </div>\n            <div className=\"col-12 col-md-5\">\n                <ClockOutButton shiftId={shift.id}/>\n            </div>\n        </li >\n    )\n};\n\nexport default CurrShift","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CurrShift from './CurrShift';\nimport { Shift } from '../models/ShiftCollection';\n\nconst CurrShiftList = () => {\n    let currShifts = useSelector(({ shifts }) => {\n        const currShifts = [];\n        for(let key in shifts){\n            if(!shifts[key].stop) currShifts.push(shifts[key]);\n        }\n        return currShifts;\n    });\n    currShifts = currShifts.map(shift => new Shift(shift));\n    return (\n        <div className=\"col-xl m-3 p-4 rounded shadow border\">\n            <div className=\"row align-items-center justify-content-around\">\n                <h1 className=\"display-4 text-center col-12 col-md-3 col-xl-12\">Current Shifts</h1>\n\n                <ul id=\"current-shifts\" className=\"col-12 col-md-9 col-xl-12\">\n                    {currShifts.map(shift => \n                        <CurrShift key={`${shift.type}-${shift.category}`} shift={shift} />\n                    )}\n                </ul>\n            </div>\n        </div>\n     )\n}\n\nexport default CurrShiftList","import React from 'react';\nimport AddShift from './AddShift';\nimport CurrShiftList from './CurrShiftList';\nconst Header = () => {\n    \n    return (\n        <>\n                <AddShift />\n                <CurrShiftList />\n        </>\n    );\n};\nexport default Header","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, [setWindowDimensions]);\n\n    return windowDimensions;\n}\n\n\nexport function useFormFields(init={}) {\n    const [formData, setFormData] = useState(init);\n    const handleChange = evt => setFormData(data => {\n        return { ...data, [evt.target.name]: evt.target.value }\n    });\n    const resetForm = () => setFormData(init);\n    return [formData, handleChange, resetForm];\n}","\nexport const DOING_ANYTHING_KEY = \"doing anything in the whole world\";\nexport const NEW_THING_KEY = \"a whole new thing\";","import { useSelector } from \"react-redux\";\nimport GaugeChart from 'react-gauge-chart';\nimport { DOING_ANYTHING_KEY, NEW_THING_KEY } from \"../../config\";\n\n//hours = {[category]: {[type]: 4.32, coding: 13.3}}\nconst GoalStats = ({hours={}, timeFrame = {val: 7, title:\"Every Week\"}}) => {\n\n    const goals = useSelector(({ goals }) => goals);\n    const goalsByCategory = {};\n    for (let goal of goals){\n        const category = goal.category;\n        goalsByCategory[category] ?\n            goalsByCategory[category].push(goal)\n            :\n            goalsByCategory[category] = [goal];\n    }\n\n    return (\n    <div className=\"row border shadow rounded p-4 \">\n        <h2 style={{ textAlign: \"left\" }}>Goals</h2>\n        {Object.keys(goalsByCategory).map(category =>\n            <div style={{ textAlign: \"center\" }} className=\"row justify-content-around text-dark my-2 p-2\">\n                <h3 style={{ textAlign: \"left\" }}>{category}</h3>\n                { goalsByCategory[category]\n                    .map(({type, category, seconds_per_day}) => {\n                        const goalHours = Math.floor((seconds_per_day * timeFrame.val) / 60 / 60) || 1; // 1000seconds_per_day * timeframe.val now its seconds in timeframe / 60 secs in min / 60 mins in hour \n                        const currHours = Math.floor(hours[category][type] * 10)/10 || 0;\n                        let percent = currHours/goalHours;\n                        if(percent > 1) percent = 1;\n                        const getGoalStatus = () => {\n                            if(percent < 1)\n                                return `${Math.floor((goalHours - currHours) * 100) / 100} Hours Till You Meet This Goal!`;\n                            else \n                                return  `Congradulations You've Met this Goal!`\n                        }\n                        type = type === DOING_ANYTHING_KEY ? \"Anything to do with \" + category : type + ' for ' + category;\n                        return <div style={{position: 'relative'}} className='col-12 col-md-6 col-lg-4 '>\n                            <h4 style={{height: '3rem'}}>{type}</h4>\n                            <div className={`border rounded shadow ${percent < 1 ? 'bg-warning text-light' : 'bg-success text-dark'}`} >\n                                <p style={{ height: '2rem' }}>{getGoalStatus()}</p>\n                                <GaugeChart \n                                    animate={false}\n                                    style={{\n                                        margin: 'auto'\n                                    }}\n                                    id={`gauge-chart-${category}-${type}`}\n                                    nrOfLevels={goalHours}\n                                    formatTextValue={() => ''}\n                                    marginIn={.5}\n                                    textColor=\"#0000000\"\n                                    arcWidth={0.8}\n                                    colors={['#EA4228', '#00FF00']}\n                                    percent={percent}\n                                    arcPadding={0.02}\n                                />\n                            </div>\n                        </div>\n                    })\n                }\n            </div>\n            )\n        }\n\n    </div>\n    );\n};\n\n// other colors'#EA4228', '#00FF00' '#F5CD19',\nexport default GoalStats","import React from 'react';\n\nimport { Chart } from 'react-google-charts';\n\nconst ShiftsPieChart = ({ series, size }) => {\n    let options = {\n        // is3D: true,\n        pieHole: 0.4,\n        chartArea: {\n            width: \"100%\"\n        },\n        slices: {\n            // 0: { color: 'green' },\n            // 1: { color: 'lightgreen' },\n            // 2: { color: 'purple' }\n        }\n    };\n\n    if (size > 580) {\n        options.legend = {\n            position: 'labeled',\n            labeledValueText: 'both',\n            textStyle: {\n                color: 'blue',\n                fontSize: 22\n            }\n        };\n\n        options.pieSliceText = 'label';\n        options.pieSliceTextStyle = { fontSize: 20 };\n    } else {\n        options.legend = {\n            position: 'bottom',\n            textStyle: {\n                color: 'blue',\n                fontSize: 18\n            }\n        };\n        options.pieSliceText = 'percentage';\n        options.pieSliceTextStyle = { fontSize: 18 };\n    }\n    if(size < 417) {\n        options.legend.textStyle.fontSize = 12;\n    }\n    const chartEvents = [\n        {\n            eventName: \"ready\",\n            callback: ({ chartWrapper, google }) => {\n                const chart = chartWrapper.getChart();\n                google.visualization.events.addListener(chart, \"click\", e => {\n                    const { targetID } = e\n                    //targetID looks like \"slice#0\"\n                    const slice = +targetID.replace(\"slice#\", '')\n                    console.warn(\"Clicked\", series[slice + 1]);\n                });\n                google.visualization.events.addListener(chart, \"onmouseover\", e => {\n                    const { row} = e;\n                    console.warn(\"MOUSE OVER \", series[row + 1]);\n                });\n            }\n        }];\n    return (\n        <div className=\"row border shadow rounded my-2 p-4\">\n            <h2 style={{ textAlign: \"left\" }}>stats</h2>\n            <div className=\"col-12\" style={{\n                    height: size,\n                    margin:\"auto\"}} >\n                <Chart\n                    width=\"100%\"\n                    height=\"100%\"\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={series}\n                    options={options}\n                    rootProps={{ 'data-testid': 'stats-pie' }}\n                    chartEvents={chartEvents}\n                />\n            </div>\n        </div>\n    )\n};\nexport default ShiftsPieChart","import React, {useState, useEffect, useCallback} from 'react'; \nimport { shallowEqual, useSelector } from 'react-redux';\n// import { Chart, Pies, Transform } from 'rumble-charts';\nimport {useWindowDimensions} from '../helpers/hooks';\nimport { Shift, ShiftCollection } from '../models/ShiftCollection';\nimport GoalStats from './goals/GoalStats';\nimport { DOING_ANYTHING_KEY } from '../config';\nimport ShiftsPieChart from './ShiftsPieChart';\n\nconst Dashboard = () => {\n    const { width, height } = useWindowDimensions();\n    const [size, setSize] = useState((width > height) ? Math.floor((height / 10) * 8) : Math.floor((width / 10) * 6));\n    console.log(width);\n    console.log(height);\n\n    //const [size, setSize] = useState(Math.floor((width / 10) * 6));\n    console.log(size);\n    useEffect(() => {\n        setSize((width > height) ? \n            Math.floor((height / 10) * 8) \n            : \n            Math.floor((width / 10) * 8)\n        )\n    }, [ width, height]);\n        \n\n    //make the size almost as big as the shortest screen dimension\n    \n\n    const allShifts = useSelector(({ shifts }) => shifts, shallowEqual);\n    const shiftsByCategory = {};\n    const currShifts = [];\n    const totalHours = {};\n\n    for(let key in allShifts) {\n        const shift = new Shift(allShifts[key]);\n        if(!shift.stop) currShifts.push(shift);\n        if(shiftsByCategory[shift.category]){\n            shiftsByCategory[shift.category].add(shift);\n        } else {\n            shiftsByCategory[shift.category] = new ShiftCollection(shift);\n        }\n        if(totalHours[shift.category]) {\n            if(totalHours[shift.category][shift.type]) {\n                totalHours[shift.category][shift.type] += shift.getHours();\n            } else {\n                totalHours[shift.category][shift.type] = shift.getHours();\n            }\n        } else {\n            totalHours[shift.category] = {\n                [shift.type]: shift.getHours()\n            };\n        }\n        if(totalHours[shift.category][DOING_ANYTHING_KEY]) {\n            totalHours[shift.category][DOING_ANYTHING_KEY] += shift.getHours();\n        } else {\n            totalHours[shift.category][DOING_ANYTHING_KEY] = shift.getHours();\n\n        }\n    }\n\n    const makeSeries = useCallback(() => [\n        ['Task', 'Hours'], \n        ...Object.keys(shiftsByCategory).map(category => {\n            return [category, Math.floor(shiftsByCategory[category].getTotalHours() * 100)/100];\n    })], [allShifts]);\n    \n\n    const [series, setSeries] = useState(makeSeries());\n\n    console.log(series);\n\n    useEffect(()=> {\n        setSeries(makeSeries());\n    }, [makeSeries, setSeries]);\n\n    // useEffect(() => {\n    //     const intervalIdArray = currShifts.map(shift => {\n    //         return setInterval(() => {\n    //             setSeries(series => {\n    //                 return series.map(data => {\n    //                     if(data.name === shift.category) {\n    //                         data.data[0] += 4/60/60 //4 second / 60 secs in min / 60 mins in hour\n    //                         return {...data};\n    //                     } else {\n    //                         return data;\n    //                     }\n    //                 });\n    //             });\n    //         }, 4000);\n    //     });\n    //     return () => \n    //         intervalIdArray.forEach(id => clearInterval(id));\n    // }, [allShifts, setSeries]);\n    \n\n    const displayCategory = (evt) => {\n        const pieSlice = evt.target.parentElement.parentElement;\n        console.log(pieSlice.classList);\n        const i = pieSlice.classList[1].replace(\"category-pie-chart-series-\", \"\");\n        console.log(pieSlice.classList);\n\n        console.log(i);\n        console.log(series[+i])\n    }\n    return (\n        <div id=\"hours-spent-dashboard\" className=\"col-12 m-3 p-4 \" >\n            {/* <h1 className=\"display-4 text-center\">\n            Hours Spent In Last Week\n            </h1> */}\n            <ShiftsPieChart series={series} size={size} />\n\n            <GoalStats hours={totalHours} size={size}/>\n\n            {/* <Chart width={size} height={size} series={series}>\n                <Transform method={['stackNormalized']}>\n                    <Pies\n                        className='category-pie-chart'\n                        colors='category10'\n                        combined={true}\n                        innerRadius='20%'\n                        padAngle={0.015}\n                        cornerRadius={5}\n                        innerPadding={2}\n                        pieAttributes={{\n                            onMouseMove: (e) => e.target.style.opacity = 1,\n                            onMouseLeave: (e) => e.target.style.opacity = 0.5,\n                            onMouseUp: displayCategory\n                        }}\n                        pieStyle={{ opacity: 0.5 }}\n                    />\n                </Transform>\n            </Chart> */}\n  </div >\n    )\n};\nexport default Dashboard","import React from 'react';\nimport Header from '../Header';\nimport Dashboard from '../Dashboard';\nconst Home = () => {\n    return (\n\n        <div className=\"container-fluid p-2 align-items-center justify-content-around\">\n            <div className=\"row border m-3 p-4 rounded shadow justify-content-center\">\n            <Header />\n            <Dashboard />\n            </div>\n        </div>\n    )\n};\n\nexport default Home","import React, { useState } from \"react\";\n\nimport './SimpleForm.css'\n\nconst SimpleForm = ( {className, INITIAL_STATE, onSubmit, submitText=\"Submit\", errors=[]} ) => {\n    const [formData, setFormData] = useState(INITIAL_STATE);\n    const handleChange = evt => setFormData(data => {\n        return {...data, [evt.target.name] : evt.target.value}\n    });\n    const resetForm = () => setFormData(INITIAL_STATE);\n    const handleSubmit = evt => {\n        evt.preventDefault(); \n        onSubmit(formData, resetForm);\n    };\n    return (\n        <form className={className} onSubmit={handleSubmit}>\n            {errors.map(message => \n                <div key={message} className={`${className}-error form-error`}>\n                    {message}\n                </div> \n            )}\n            {Object.keys(INITIAL_STATE).map(name => (\n                <div key={name}>\n                    <label htmlFor={name}> {name}: </label>\n                    <input\n                        type=\"text\"\n                        name={name}\n                        id={name}\n                        value={formData[name]}\n                        onChange={handleChange} \n                    />\n                </div>\n            ))}\n            <button>{submitText}</button>\n        </form> \n    )\n};\nexport default SimpleForm","import './Login.css';\n\nimport React, {useState} from \"react\";\nimport {useDispatch} from 'react-redux';\n// import { useHistory } from \"react-router\";\n// import UserContext from \"../UserContext\";\nimport { authorizeUser} from \"../../models/redux/actionCreators\";\nimport SimpleForm from \"./SimpleForm\";\nimport { useHistory } from 'react-router';\n\nconst LoginForm = () => {\n    const history = useHistory();\n    const dispatch = useDispatch(); \n    const [errors, setErrors] = useState([]);\n\n    const loginInputs = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const login = async ({ username, password }, reset) => {\n        const result = await dispatch(authorizeUser({ username, password }));\n        if (result.status) {\n            //caused a memory leak because the login form was usually gone by the time it updated\n            //reset();\n            // setErrors([]);\n            history.push('/');\n        } else {\n            setErrors([result.errors]);\n        }\n    }\n\n    return <SimpleForm \n        className=\"Login\" \n        INITIAL_STATE={loginInputs} \n        onSubmit={login}\n        submitText=\"Login\"\n        errors={errors}\n    />\n};\nexport default LoginForm","import './Signup.css';\n\nimport { useDispatch} from 'react-redux';\nimport { registerUser } from \"../../models/redux/actionCreators\";\n\nimport React, { useState } from \"react\";\nimport SimpleForm from \"./SimpleForm\";\nimport { useHistory } from 'react-router';\n\nconst SignupForm = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState([]);\n\n    \n    const signupInputs = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const signup = async ({ username, password }, reset) => {\n        const result = await dispatch(registerUser({ username, password }));\n        if(result.status) {\n            //caused a memory leak because the login form was usually gone by the time it updated\n            //reset();\n            setErrors([]);\n            alert(`Registered ${result.user.id}`);\n            history.push('/');\n        } else {\n            setErrors([result.errors]);\n        }\n    }\n\n\n    return <SimpleForm \n        className=\"Signup\"\n        INITIAL_STATE={signupInputs}\n        onSubmit={signup}\n        submitText=\"Sign Up!\"\n        errors={errors}\n    />\n};\nexport default SignupForm","import React from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nconst Profile = () => {\n    const user = useSelector(({ user }) => user, shallowEqual);\n    return (\n        <div>\n            <h1>Welcome to your profile, {user.username}!</h1> \n            <ul>\n                {Object.keys(user).map(key => \n                    <li>{key}: {user[key]}</li>\n                )}\n            </ul>\n        </div>\n    );\n};\nexport default Profile","import React from \"react\";\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\nimport { useFormFields } from \"../../helpers/hooks\";\nimport { addGoal } from \"../../models/redux/actionCreators\";\nimport { ShiftCollection } from \"../../models/ShiftCollection\";\nimport { DOING_ANYTHING_KEY, NEW_THING_KEY } from \"../../config\";\n\n\nconst NewGoal = ({ timeFrame }) => {\n    const dispatch = useDispatch();\n    // const [newestGoal, setNewestGoal] = useState(5);\n    const shifts = useSelector(({ shifts }) => shifts, shallowEqual);\n    const allShifts = new ShiftCollection(...Object.values(shifts));\n\n    /** TODO Fix up this initial state to account for when there are no shifts */\n    const [data, handleChange, resetForm] = useFormFields({\n        hours: '5',\n        type: DOING_ANYTHING_KEY,\n        category: allShifts.getCategories()[0]\n    });\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n        let { category, type, hours } = data;\n        hours = +hours;\n        const seconds = 60 * 60 * hours;//60 seconds in min * 60 mins in hour \n        const seconds_per_day = Math.floor(seconds / timeFrame.val); // if day, val is 1, if week val is 7\n        const newGoal = {\n            type,\n            category,\n            seconds_per_day\n        }\n        console.log(newGoal);\n        await dispatch(addGoal(newGoal));\n        //TODO dispatch new Goal Event\n        resetForm();\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"range\"\n                id=\"hours\" name=\"hours\"\n                min={0}\n                max={50}\n                value={data.hours}\n                onChange={handleChange}\n            />\n            <label htmlFor=\"hours\">{data.hours} Hours {timeFrame.title} </label> \n            <select id=\"type\" name=\"type\" value={data.type} onChange={handleChange}>\n                <option value={DOING_ANYTHING_KEY}>\n                    Doing Anything\n                </option>\n                {allShifts.getTypes().map( type => \n                    <option key={type} value={type}>{type}</option>\n                )}\n                <option value={NEW_THING_KEY}>\n                    Doing Something Else\n                </option>\n\n            </select>\n            For\n            <select id = \"category\" name = \"category\" value={data.category} onChange={handleChange}>\n                {allShifts.getCategories().map(category =>\n                    <option key={category} value={category}>\n                        {category}\n                    </option>)\n                }\n            </select >\n            <button className=\"btn btn-success\" >Add Goal</button>\n\n        </form >\n    );\n};\nexport default NewGoal","import { useDispatch } from \"react-redux\";\nimport { deleteGoal, updateAGoal } from \"../../models/redux/actionCreators\";\nimport { DOING_ANYTHING_KEY } from \"../../config\";\nimport { useFormFields } from \"../../helpers/hooks\";\n\nconst GoalRow = ({ goal, timeFrame }) => {\n    let { type, category, seconds_per_day } = goal;\n    const hours = Math.ceil((seconds_per_day / 60 / 60) * timeFrame.val); \n        //secs per day 60 seconds in a min, 60 mins in a hour  gets you hours per day\n        // * days in timeframe (val)\n    const [data, handleChange] = useFormFields({ hours });\n    const dispatch = useDispatch();\n\n    const remove = () => {\n        dispatch(deleteGoal(goal));\n    };\n    const changeGoal = (evt) => {\n        const newHours = evt.target.value;\n        const seconds_per_day = Math.floor((newHours / timeFrame.val) * 60 * 60);\n            //30 hours per week (divided by 7) / 60 mins in hour / 60 secs in min \n        dispatch(updateAGoal({ ...goal , seconds_per_day }));\n        handleChange(evt);\n    }\n\n    type = (type === DOING_ANYTHING_KEY) ? \"Doing Anything\" : type;\n\n    const text = \n        <>\n            <input \n                type=\"number\" \n                name=\"hours\" \n                value={data.hours} \n                onChange={changeGoal} \n                style={{width: '4rem'}}\n            />\n            {hours === 1 ? \"hour\" : \"hours\"} { type } for { category }\n        </>;\n    return (\n        <h4>\n            {text}\n            <span className=\"btn btn-danger btn-sm\" onClick={remove}>\n                x\n            </span>\n        </h4>\n)};\nexport default GoalRow","import GoalRow from \"./GoalRow\";\n\nconst GoalList = ({ goals, timeFrame }) => {\n    // const goals = useSelector(({goals}) => goals, shallowEqual);\n    return (\n    <>\n        {goals.map( goal => \n            <GoalRow key={`${goal.type}-${goal.category}`} goal={goal} timeFrame={timeFrame} />\n        )}\n    </>)\n};\nexport default GoalList","import React, {useState} from 'react';\nimport NewGoal from '../goals/NewGoal';\nimport { useSelector} from 'react-redux';\nimport GoalList from '../goals/GoalList';\n\nconst timeFrames = { \n    day:{\n        title: \"Every Day\", \n        val:1\n    },\n    week: {\n        title: \"Every Week\",\n        val: 7,\n    },\n    month: {\n        title: \"Every Month\",\n        val: 30\n    }\n}\nconst SetGoals = () => {\n    const [ timeFrame, setTimeFrame ] = useState(\"week\");\n\n    const goals = useSelector(({ goals }) => goals);\n\n    return (\n        <div className=\"container-fluid p-2 align-items-center justify-content-around\">\n            <div className=\"row border m-3 p-4 rounded shadow justify-content-center\">\n                <h1><select \n                        name='timeframe' \n                        onChange={evt => setTimeFrame(evt.target.value)}\n                        value={timeFrame}\n                    >\n                    <option value=\"day\">{timeFrames.day.title}</option>\n                    <option value=\"week\">{timeFrames.week.title}</option>\n                    <option value=\"month\">{timeFrames.month.title}</option>\n                    </select> I want to spend...\n                </h1>\n                <GoalList goals={goals} timeFrame={timeFrames[timeFrame]} />\n                <h4>And...</h4>\n                <NewGoal timeFrame={timeFrames[timeFrame]} />\n            </div>\n        </div>\n    )\n};\nexport default SetGoals","import React, { useState } from 'react';\nconst MultiTextBox = ({ text, name, value, onSubmit }) => {\n    const [clicked, setClicked] = useState(false);\n    const [val, setVal] = useState(value);\n    function handleChange (evt) {\n        setVal(evt.target.value);\n    } \n    function handleSubmit(evt) {\n        evt.preventDefault();\n        onSubmit(name, val);\n        setClicked(false);\n    }\n    function reset() {\n        setVal(value);\n        setClicked(false);\n    }\n\n    if(clicked){\n        return (\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    name={name}\n                    value={val}\n                    onChange={handleChange}\n                />\n                <input className=\"btn btn-success\" type=\"submit\" value=\"Change\"/>\n                <button className=\"btn btn-warning\" onClick={reset}>Reset</button>\n            </form>\n        );\n    } else {\n        return (\n            <span onClick={() => setClicked(state => state ? false:true)} >\n                {text}\n            </span>\n        );\n    }\n};\nexport default MultiTextBox\n","import { useDispatch } from \"react-redux\";\nimport { deleteShift, updateAShift } from \"../../models/redux/actionCreators\";\nimport ClockOutButton from \"../ClockOutButton\";\nimport MultiTextBox from \"../forms/MultiTextBox\";\nimport DateTimeInput from 'react-datetime-picker';\nimport { useState } from \"react\";\n\nconst ShiftRow = ({ shift }) => {\n    const [style, setStyle] = useState({});\n    const { start, stop, category, type, id } = shift;\n    const dispatch = useDispatch();\n    const duration = shift.getFormattedDuration();\n    const remove = () => {\n        dispatch(deleteShift(id));\n    };\n    const update = (name, newVal) => {\n        const updatedShift = {...shift, [name]: newVal};\n        dispatch(updateAShift(updatedShift));\n    }; \n    const updateType = (name, newVal) => {\n        update(name, newVal.toLowerCase())\n    };\n    const updateCategory = (name, newVal) => {\n        update(name, newVal.toLowerCase())\n    };\n\n    /** TODO \n     * a little buggy, doesn't update start if you put start after stop and then adjust stop to be later than start\n     * im thinking I'm going to have to use state for this, but I'm not sure\n     */\n    \n    const updateStart = (val) => {\n        if (val < stop){\n            update('start', val);\n            setStyle({});\n        }\n        else {\n            setStyle({backgroundColor: 'red'})\n            // alert(\"Start can't be after stop\");\n        }\n    };\n    const updateStop = (val) => {\n        if(val > start){\n            update('stop', val);\n            setStyle({});\n        }\n        else {\n            setStyle({ backgroundColor: 'red' });\n            // alert(\"Start can't be after stop\");\n        }\n    };\n    return (\n        <tr id={`shiftRow-${id}`} style ={style}>\n            <td><MultiTextBox text={type} value={type} name=\"type\" onSubmit={updateType} /> </td>\n            <td><small>for</small></td>\n            <td><MultiTextBox text={category} value={category} name=\"category\" onSubmit={updateCategory} /> </td>\n            <td><DateTimeInput \n                value={start} \n                onChange={updateStart} \n            />\n            </td>\n            <td>- {duration} -</td>\n            <td>\n            {stop ?\n                <DateTimeInput\n                    value={stop}\n                    onChange={updateStop}\n                />\n                : <ClockOutButton shiftId={id} />\n            }\n            </td>\n            <td className=\"btn btn-danger btn-sm\" onClick={remove}>\n                x\n            </td>\n        </tr>\n)};\nexport default ShiftRow","import { shallowEqual, useSelector } from \"react-redux\";\nimport { ShiftCollection } from \"../../models/ShiftCollection\";\nimport ShiftRow from \"./ShiftRow\";\n\nconst ShiftList = () => {\n    //shifts looks like {1: {id, start, stop, type, category, u_id}, ...}\n    const shifts = useSelector(({shifts}) => shifts, shallowEqual);\n    const allShifts = new ShiftCollection(...Object.values(shifts));\n    const sort = ShiftCollection.SORT_PARAMS;\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th></th>\n                    <th>Category</th>\n                    <th>Start</th>\n                    <th>Time Spent</th>\n                    <th>End</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {allShifts.shiftsBy(sort.START, sort.DESCENDING)\n                    .map(shift => \n                        <ShiftRow shift={shift} key={shift.id} />\n                )}\n            </tbody>\n        </table>\n    )\n};\nexport default ShiftList","import React from 'react';\nimport ShiftList from '../shifts/ShiftList';\nconst EditShifts = () => {\n    return (\n        <div className=\"container-fluid p-2 align-items-center justify-content-around\">\n            <div className=\"row border m-3 p-4 rounded shadow justify-content-center\">\n                <ShiftList />\n            </div>\n        </div>\n    )\n};\n\nexport default EditShifts","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from './scenes/Home';\nimport Login from './forms/Login';\n\nimport Signup from './forms/Signup';\nimport Profile from \"./Profile\";\nimport SetGoals from \"./scenes/SetGoals\";\nimport EditShifts from \"./scenes/EditShifts\";\nimport { useSelector } from \"react-redux\";\n\nfunction Routes() {\n    const user = useSelector(({user}) => user);\n    if(user.id)\n        return (\n            <Switch>\n\n                <Route exact path=\"/profile\"> <Profile /> </Route>\n                <Route exact path=\"/set-goals\"> <SetGoals /> </Route>\n                <Route exact path=\"/edit-shifts\"> <EditShifts /> </Route>\n                <Route exact path=\"/\"> <Home /> </Route>\n                <Redirect to=\"/\" />\n            </Switch>\n        );\n    else \n        return (\n            <Switch>\n\n                <Route exact path=\"/login\"> <Login /> </Route>\n                <Route exact path=\"/signup\"> <Signup /> </Route>\n                <Redirect to=\"/login\" />\n            </Switch>\n        );\n}\n\nexport default Routes;\n","import './App.css';\nimport React from 'react';\nimport NavBar from '../NavBar';\nimport Routes from '../Routes';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Routes />\n      <h3>Footer</h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport {Shift} from \"../ShiftCollection\";\n// EX\n// import { combineReducers } from \"redux\";\n// function planets(state = INITIAL_STATE, action) {\n//     switch (action.type) {\n//         case RESET_ALL:\n//             return { ...INITIAL_STATE };\n\n//         case LOAD_PLANET:\n//             return {\n//                 ...state,\n//                 [action.payload.id]: { ...action.payload }\n//             };\n\n//         default:\n//             return state;\n//     }\n// }\n\n\n// export default combineReducers({\n//     films,\n//     planets,\n//     people,\n// });\nconst SHIFTS_INITIAL_STATE = {};\n\nfunction shifts(shifts = SHIFTS_INITIAL_STATE, action) {\n    \n    switch (action.type) {\n        case \"START_SHIFT\":\n            const newShift = new Shift(action.payload);\n            return {...shifts, [newShift.id]: newShift };\n        case \"LOAD_SHIFTS\":\n            shifts = {...shifts}\n            action.payload.forEach(shift => shifts[shift.id] = shift );\n            return shifts;\n        case \"UPDATE_SHIFT\":\n            const updatedShift = new Shift(action.payload);\n            return { ...shifts, [updatedShift.id]: updatedShift };\n        case \"DELETE_SHIFT\":\n            shifts = { ...shifts };\n            delete shifts[action.shiftId];\n            return shifts;\n        case \"RESET_SHIFTS\":\n            return SHIFTS_INITIAL_STATE;\n        default:\n            return shifts;\n    }\n}\nconst GOALS_INITIAL_STATE = [];\n\nfunction goals(goals = GOALS_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"ADD_GOAL\":\n            return [ ...goals, action.payload ];\n        case \"LOAD_GOALS\":\n            console.log(action.payload);\n            return [...goals, ...action.payload ];\n        case \"UPDATE_GOAL\":\n            const nGoal = action.payload\n            return goals.map(goal => (goal.type === nGoal.type && \n                                    goal.category === nGoal.category) ? \n                            nGoal : goal);\n        case \"DELETE_GOAL\":\n            const seeking = action.payload\n            console.log(goals.filter(goal => !(goal.type === seeking.type &&\n                goal.category === seeking.category)));\n            return goals.filter(goal => !(goal.type === seeking.type &&\n                goal.category === seeking.category));\n        case \"RESET_GOALS\":\n            return GOALS_INITIAL_STATE;\n        default:\n            return goals;\n    }\n}\n\nconst QUEUE_INITIAL_STATE = [];\n\nfunction shiftQueue(shifts = QUEUE_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"ADD_SHIFT_TO_UPLOAD_QUEUE\":\n            return [...shifts, action.payload];\n\n        case \"REMOVE_SHIFT_FROM_UPLOAD_QUEUE\":\n            //to be improved\n            return shifts.filter(s => s.type !== action.payload.type ||\n                    s.category !== action.payload.category ||\n                    s.start !== action.payload.start);\n        \n        case \"RESET_UPLOAD_QUEUE\":\n        //to be improved\n        return [...QUEUE_INITIAL_STATE];\n\n        default:\n            return shifts;\n    }\n}\n\nconst USER_INITIAL_STATE = {};\nfunction user(user = USER_INITIAL_STATE, action) {\n    switch (action.type) {\n        case \"SET_USER\":\n            return action.payload;\n\n        case \"RESET_USER\":\n            return USER_INITIAL_STATE;\n\n        default:\n            return user;\n    }\n}\nexport default combineReducers({\n    shifts,\n    user,\n    shiftQueue,\n    goals\n});","import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nimport thunk from \"redux-thunk\";\nimport root from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\n\n/**TODO \n * UPDATE SHIFT STORAGE FROM API ON INIT LOAD.\n * \n * ALREADY UPDATES SHIFTS ON USER AUTH \n */\n\n//merges the initial state with the incoming state with a shallow merge\n//reset everytime for testing\n// localStorage.clear();\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    stateReconciler: autoMergeLevel2\n};\n\nconst persistedReducer = persistReducer(persistConfig, root);\n\n//the Redux Store\nexport const store = createStore(\n    persistedReducer,\n    composeWithDevTools(\n        applyMiddleware(thunk),\n    )\n);\n\n/** an object containing \n * .purge()\n *    purges state from disk and returns a promise\n * .flush()\n *    immediately writes all pending state to disk and returns a promise\n * .pause()\n *    pauses persistence\n * .persist()\n *    resumes persistence\n */\nexport const persistedStore = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/scenes/App';\nimport reportWebVitals from './helpers/reportWebVitals';\n\nimport { BrowserRouter } from 'react-router-dom'\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { store, persistedStore } from \"./models/redux/store\"\n\nconst index = (\n<React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistedStore}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>\n</React.StrictMode>\n);\n\nReactDOM.render(\n  index,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}